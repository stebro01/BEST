[
  {
    "cda": {
      "resourceType": "Composition",
      "id": "dbBEST",
      "meta": {
        "versionId": "v20240807",
        "lastUpdated": "2024-08-08",
        "source": "https://github.com/stebro01/dbBEST.git",
        "profile": []
      },
      "language": "de-DE",
      "text": {
        "status": "generated",
        "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n<h1>Export von dbBEST (v20240807) - Klinische Beobachtungen)</h1>\n<table id=\"summary_table\" >\n<tbody>\n<tr><td>Visiten:</td><td></td></tr>\n<tr><td>code:</td><td>308335008</td></tr>\n<tr><td>system:</td><td>http://snomed.info/sct</td></tr>\n</tbody>\n</table>\n<br>\n<table id=\"description_table\">\n<tbody>\n<tr><td>Document-ID:</td><td>urn:uuid:895f6f22-f7d6-4feb-90d4-dbfd49b5471e</td></tr>\n<tr><td>date:</td><td>2024-09-05</td></tr>\n<tr><td>ressource:</td><td>https://github.com/stebro01/dbBEST.git_v20240807_2024-08-08</td></tr>\n</tbody>\n</table>\n<br>\n<table id=\"subjects_table\">\n<tbody>\n<tr><td>Subject:</td><td>sdfjlke</td></tr>\n<tr><td>Investigator:</td><td>stefan</td></tr>\n<tr><td>start time:</td><td>null</td></tr>\n<tr><td>end time:</td><td>undefined</td></tr>\n</tbody>\n</table>\n<h2>Visiten</h2>\n<h3>Visite: 1</h3>\n<table id=\"visite_1\">\n<tr><td>start time</td><td>Date of birth</td><td>Gender</td><td>Lives alone</td><td>MOCA Total Score</td><td>Race or Ethnicity</td><td>Assessment scales</td><td>BDI II - Beck Depression Inventory II</td><td>Rohdaten ohne genaue Angaben</td></tr>\n<tr><td>null</td><td>2024-04-07</td><td>Male</td><td>No</td><td>21</td><td>White</td><td>Object</td><td>24</td><td>Object</td></tr>\n</table>\n<h3>Visite: 2</h3>\n<table id=\"visite_2\">\n<tr><td>start time</td><td>Lives alone</td><td>Age</td><td>Date of birth</td><td>Gender</td><td>MOCA</td><td>MOCA Total Score</td></tr>\n<tr><td>null</td><td>k.A.</td><td>55</td><td>1980-04-03</td><td>Female</td><td>Yes</td><td>24</td></tr>\n</table>\n</div>"
      },
      "identifier": {
        "system": "urn:undefined",
        "value": "urn:uuid:895f6f22-f7d6-4feb-90d4-dbfd49b5471e"
      },
      "status": "preliminary",
      "type": {
        "coding": [
          {
            "system": "http://snomed.info/sct",
            "code": 404684003,
            "display": "Klinische Beobachtungen"
          }
        ]
      },
      "subject": {
        "display": "sdfjlke",
        "code": {
          "coding": [
            {
              "system": "http://snomed.info/sct",
              "code": 422549004,
              "display": "Patient Code"
            }
          ]
        }
      },
      "date": "2024-09-05",
      "author": [
        {
          "display": "dbBEST"
        }
      ],
      "title": "Export von dbBEST (v20240807) - Klinische Beobachtungen)",
      "attester": [
        {
          "mode": "legal",
          "time": null,
          "party": {
            "display": "stefan"
          }
        },
        {
          "mode": "legal",
          "time": "2024-01-04",
          "party": {
            "display": "hl7import"
          }
        }
      ],
      "custodian": {},
      "event": [
        {
          "code": [
            {
              "coding": [
                {
                  "system": "http://snomed.info/sct",
                  "code": 308335008,
                  "display": "Visite: 1"
                }
              ]
            }
          ],
          "period": {
            "start": null
          }
        },
        {
          "code": [
            {
              "coding": [
                {
                  "system": "http://snomed.info/sct",
                  "code": 308335008,
                  "display": "Visite: 2"
                }
              ]
            }
          ],
          "period": {
            "start": null
          }
        }
      ],
      "section": [
        {
          "title": "Visite: 1",
          "code": [
            {
              "coding": [
                {
                  "system": "http://snomed.info/sct",
                  "code": 308335008,
                  "display": "Visite: 1"
                }
              ]
            }
          ],
          "text": {
            "status": "generated",
            "div": "<h1>Visite: 1</h1>"
          },
          "entry": [
            {
              "title": "Date of birth",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "SCTID: 184099003",
                      "display": "Date of birth"
                    }
                  ]
                }
              ],
              "value": "2024-04-07",
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>Date of birth</td></tr><tr><td>2024-04-07</td></tr></tbody></table>"
              }
            },
            {
              "title": "Gender",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "SCTID: 263495000",
                      "display": "Gender"
                    }
                  ]
                }
              ],
              "value": "Male",
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>Gender</td></tr><tr><td>Male</td></tr></tbody></table>"
              }
            },
            {
              "title": "Lives alone",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "SCTID: 105529008",
                      "display": "Lives alone"
                    }
                  ]
                }
              ],
              "value": "No",
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>Lives alone</td></tr><tr><td>No</td></tr></tbody></table>"
              }
            },
            {
              "title": "MOCA Total Score",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "LID: 72172-0",
                      "display": "MOCA Total Score"
                    }
                  ]
                }
              ],
              "value": 21,
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>MOCA Total Score</td></tr><tr><td>21</td></tr></tbody></table>"
              }
            },
            {
              "title": "Race or Ethnicity",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "LID: 46463-6",
                      "display": "Race or Ethnicity"
                    }
                  ]
                }
              ],
              "value": "White",
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>Race or Ethnicity</td></tr><tr><td>White</td></tr></tbody></table>"
              }
            },
            {
              "title": "Assessment scales",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "SCTID: 273249006",
                      "display": "Assessment scales"
                    }
                  ]
                }
              ],
              "value": {
                "TVAL_CHAR": "EQ-5D",
                "OBSERVATION_BLOB": "{'resourceType':'Composition','id':'QUESTIONNAIRE-surveyBEST','meta':{'versionId':'1.3','lastUpdated':'2021-07-20T21:30:12:00','source':'#surveyBEST','profile':[]},'language':'de-DE','text':{'status':'generated','div':'<div xmlns=\\'http://www.w3.org/1999/xhtml\\'><h1>Questionnaire - surveyBEST</h1><table id=\\'summary_table\\' ><tbody><tr><td>questionnaire:</td><td>EQ-5D</td></tr><tr><td>code:</td><td>273725009</td></tr><tr><td>system:</td><td>http://snomed.info/sct</td></tr></tbody></table><br><table id=\\'description_table\\'><tbody><tr><td>Document-ID:</td><td>uuid:9aafe266-beb2-44f5-94dc-25071e1a9686</td></tr><tr><td>date:</td><td>2024-01-04T6:44:23GMT+0100</td></tr><tr><td>ressource:</td><td>#surveyBEST_1.3_2021-07-20T21:30:12:00</td></tr></tbody></table><br><table id=\\'subjects_table\\'><tbody><tr><td>Subject:</td><td>sdfjlke</td></tr><tr><td>Investigator:</td><td>uid: stefan-16767063-2140-41f3-a837-7147a2126fc1</td></tr><tr><td>start time:</td><td>2024-01-04T6:44:20GMT+0100</td></tr><tr><td>end time:</td><td>2024-01-04T6:44:22GMT+0100</td></tr></tbody></table><br><h2>Results</h2><table id=\\'results_table\\'><tbody><tr><td>PID</td><td>quest</td><td>date</td><td>health_status</td></tr><tr><td>sdfjlke</td><td>eq5d</td><td>2024-01-04T6:44:23GMT+0100</td><td>45</td></tr></tbody></table><br></div>'},'identifier':{'system':'','value':'uuid:9aafe266-beb2-44f5-94dc-25071e1a9686'},'status':'preliminary','type':{'coding':[{'system':'http://snomed.info/sct','code':'273249006','display':'Assessment-Scale'}]},'subject':{'display':'sdfjlke'},'date':'2024-01-04T6:44:23GMT+0100','author':[{'display':'surveyBEST'}],'title':'Questionnaire - surveyBEST','attester':[{'mode':'legal','time':'2024-01-04T6:44:23GMT+0100','party':{'display':'uid: stefan-16767063-2140-41f3-a837-7147a2126fc1'}}],'custodian':{'display':'surveyBEST'},'event':[{'code':[{'coding':[{'system':'http://snomed.info/sct','code':'273725009','display':'EQ-5D'}]}],'period':{'start':'2024-01-04T6:44:20GMT+0100','end':'2024-01-04T6:44:22GMT+0100'}}],'section':[{'title':'Findings Section','code':[{'coding':[{'system':'http://snomed.info/sct','code':'273725009','display':'EQ-5D','version':'20211026'}]}],'text':{'status':'generated','div':'<table id=\\'section_findings\\'><tbody><tr><td>health_status</td></tr><tr><td>45</td></tr></tbody></table>'},'entry':[{'title':'health_status','code':[{'coding':[{'display':'health_status','code':'406221003','system':'http://snomed.info/sct'}]}],'value':45,'text':{'status':'generated','div':'<table><tbody><tr><td>health_status</td></tr><tr><td>45</td></tr></tbody></table>'}}]}]}",
                "VALTYPE_CD": null,
                "CATEGORY_CHAR": "surveyBEST"
              },
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>Assessment scales</td></tr><tr><td>Object</td></tr></tbody></table>"
              }
            },
            {
              "title": "BDI II - Beck Depression Inventory II",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "SCTID: 717268000",
                      "display": "BDI II - Beck Depression Inventory II"
                    }
                  ]
                }
              ],
              "value": 24,
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>BDI II - Beck Depression Inventory II</td></tr><tr><td>24</td></tr></tbody></table>"
              }
            },
            {
              "title": "Rohdaten ohne genaue Angaben",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "CUSTOM: RAW_DATA",
                      "display": "Rohdaten ohne genaue Angaben"
                    }
                  ]
                }
              ],
              "value": {
                "TVAL_CHAR": "{\"filename\":\"output222.json\",\"ext\":\".json\",\"sizeKB\":130.3330078125,\"source_dir\":\"/Users/ste/MyProjects/BEST/db/app/test/jest/mockups/hl7\"}",
                "OBSERVATION_BLOB": "ewogICJjZGEiOiB7CiAgICAicmVzb3VyY2VUeXBlIjogIkNvbXBvc2l0aW9uIiwKICAgICJpZCI6ICJkYkJFU1QiLAogICAgIm1ldGEiOiB7CiAgICAgICJ2ZXJzaW9uSWQiOiAidjIwMjMwMTIxIiwKICAgICAgImxhc3RVcGRhdGVkIjogIjIwMjMtMDEtMTUiLAogICAgICAic291cmNlIjogImh0dHBzOi8vZ2l0aHViLmNvbS9zdGVicm8wMS9kYkJFU1QuZ2l0IiwKICAgICAgInByb2ZpbGUiOiBbXQogICAgfSwKICAgICJsYW5ndWFnZSI6ICJkZS1ERSIsCiAgICAidGV4dCI6IHsKICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAiZGl2IjogIjxkaXYgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI+XG48aDE+RXhwb3J0IHZvbiBkYkJFU1QgKHYyMDIzMDEyMSkgLSBLbGluaXNjaGUgQmVvYmFjaHR1bmdlbik8L2gxPlxuPHRhYmxlIGlkPVwic3VtbWFyeV90YWJsZVwiID5cbjx0Ym9keT5cbjx0cj48dGQ+VmlzaXRlbjo8L3RkPjx0ZD48L3RkPjwvdHI+XG48dHI+PHRkPmNvZGU6PC90ZD48dGQ+MzA4MzM1MDA4PC90ZD48L3RyPlxuPHRyPjx0ZD5zeXN0ZW06PC90ZD48dGQ+aHR0cDovL3Nub21lZC5pbmZvL3NjdDwvdGQ+PC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGJyPlxuPHRhYmxlIGlkPVwiZGVzY3JpcHRpb25fdGFibGVcIj5cbjx0Ym9keT5cbjx0cj48dGQ+RG9jdW1lbnQtSUQ6PC90ZD48dGQ+dXJuOnV1aWQ6ODk1ZjZmMjItZjdkNi00ZmViLTkwZDQtZGJmZDQ5YjU0NzFlPC90ZD48L3RyPlxuPHRyPjx0ZD5kYXRlOjwvdGQ+PHRkPjIwMjMtMDEtMjI8L3RkPjwvdHI+XG48dHI+PHRkPnJlc3NvdXJjZTo8L3RkPjx0ZD5odHRwczovL2dpdGh1Yi5jb20vc3RlYnJvMDEvZGJCRVNULmdpdF92MjAyMzAxMjFfMjAyMy0wMS0xNTwvdGQ+PC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGJyPlxuPHRhYmxlIGlkPVwic3ViamVjdHNfdGFibGVcIj5cbjx0Ym9keT5cbjx0cj48dGQ+U3ViamVjdDo8L3RkPjx0ZD4xMDAxOTgxNTwvdGQ+PC90cj5cbjx0cj48dGQ+SW52ZXN0aWdhdG9yOjwvdGQ+PHRkPnVuZGVmaW5lZDwvdGQ+PC90cj5cbjx0cj48dGQ+c3RhcnQgdGltZTo8L3RkPjx0ZD4yMDE4LTEyLTA0PC90ZD48L3RyPlxuPHRyPjx0ZD5lbmQgdGltZTo8L3RkPjx0ZD51bmRlZmluZWQ8L3RkPjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cbjxoMj5WaXNpdGVuPC9oMj5cbjxoMz5WaXNpdGU6IDE8L2gzPlxuPHRhYmxlIGlkPVwidmlzaXRlXzFcIj5cbjx0cj48dGQ+c3RhcnQgdGltZTwvdGQ+PHRkPkFnZTwvdGQ+PHRkPkRhdGUgb2YgYmlydGg8L3RkPjx0ZD5HZW5kZXI8L3RkPjx0ZD5PY2N1cGF0aW9uPC90ZD48dGQ+TWFyaXR1YWwgc3RhdHVzPC90ZD48dGQ+RHVyYXRpb24gb2YgZnJvbWFsIGVkdWNhdGlvbjwvdGQ+PHRkPkxpdmVzIGFsb25lIChmaW5kaW5nKTwvdGQ+PHRkPlByaW1hcnkgRGlhZ25vc2lzPC90ZD48dGQ+UHJvZ3JlZGllbnogenUgRGVtZW56PC90ZD48dGQ+RmFtaWx5IEhpc3Rvcnkgb2YgZGVtZW50aWEgPC90ZD48dGQ+UHJlLWV4aXN0aW5nIGNvbmRpdGlvbnM8L3RkPjx0ZD5IZWFydCBkaXNlYXNlPC90ZD48dGQ+SHlwZXJ0ZW5zaXZlIGRpc29yZGVyLCBzeXN0ZW1pYyBhcnRlcmlhbCAoZGlzb3JkZXIpPC90ZD48dGQ+RGlhYmV0ZXMgbWVsbGl0dXMgMjwvdGQ+PHRkPlRhYmFjY28gU21va2luZyBzdGF0dXM8L3RkPjx0ZD5EZXByZXNzaW9uIChkaXNvcmRlcik8L3RkPjx0ZD5IaXN0b3J5IG9mIEFsY29ob2wgdXNlPC90ZD48dGQ+Qmxvb2QgcHJlc3N1cmUgc3lzdG9saWM8L3RkPjx0ZD5CbG9vZCBwcmVzc3VyZSBkaWFzdG9saWM8L3RkPjx0ZD5IZWFydCByYXRlPC90ZD48dGQ+Q2VyZWJyb3NwaW5hbCBmbHVpZCBleGFtaW5hdGlvbjwvdGQ+PHRkPkNlcmVicm9zcGluYWwgZmx1aWQgc3BlY2ltZW4gKHNwZWNpbWVuKTwvdGQ+PHRkPlRhdS1Qcm90ZWluIChNYXNzL1ZvbHVtZSkgaW4gQ2VyZWJyYWwgc3BpbmFsIGZsdWlkPC90ZD48dGQ+QW15bG9pZCBiZXRhIDQyIHBlcHRpZGUgKE1hc3MvVm9sdW1lKSBpbiBjZXJlYnJhbCBzcGluYWwgZmx1aWQ8L3RkPjx0ZD5QaG9zcGhvcnlsYXRlZCB0YXUgMTgxIChNYXNzL1ZvbHVtZSkgaW4gY2VyZWJyYWwgc3BpbmFsIGZsdWlkIGJ5IEltbXVub2Fzc2F5PC90ZD48dGQ+TGFib3JhdG9yeSB0ZXN0PC90ZD48dGQ+TGV1a29jeXRlcyAoIy9Wb2x1bWUpIGluIEJsb29kPC90ZD48dGQ+SGVtb2dsb2JpbiAoTWFzcy9Wb2x1bWUpIGluIEJsb29kPC90ZD48dGQ+RXJ5dGhyb2N5dGVzICgjL1ZvbHVtZSkgaW4gQmxvb2Q8L3RkPjx0ZD5IZW1hdG9jcml0IChWb2x1bWUgRnJhY3Rpb24pIG9mIEJsb29kPC90ZD48dGQ+UGxhdGVsZXRzICgjL3ZvbHVtZSkgaW4gQmxvb2Q8L3RkPjx0ZD5JTlIgaW4gQmxvb2QgYnkgQ29hZ3VsYXRpb24gYXNzYXk8L3RkPjx0ZD5hUFRUIGluIEJsb29kIGJ5IEMuQTwvdGQ+PHRkPkxETC1DaG9sZXN0ZXJpbiAoTW9sZXMvVm9sdW1lKSBpbiBTZXJ1bSBvciBQbGFzbWE8L3RkPjx0ZD5rcmVhdGluaW4gKE1hc3MvVm9sb3VtZSkgaW4gQmxvb2Q8L3RkPjx0ZD5IREwtQ2hvbGVzdGVyaW4gKE1vbGVzL1ZvbHVtZSkgaW4gU2VydW0gb3IgUGxhc21hPC90ZD48dGQ+Q29iYWxhbWluIChWaXRhbWluIEIxMikgKE1vbGVzL3ZvbHVtZSkgaW4gc2VydW0gb3IgcGxhc21hPC90ZD48dGQ+Rm9sc8OkdXJlPC90ZD48dGQ+QmVmdW5kIE1SVCBTY2jDpGRlbCAvIGNNUlQ8L3RkPjx0ZD5Eb3BwbGVyIHVsdHJhc291bmQ8L3RkPjx0ZD5NUkkgb2YgYnJhaW48L3RkPjx0ZD5BQ0UtSUlJPC90ZD48dGQ+QUNFLUlJSSBNZW1vcnk8L3RkPjx0ZD5BQ0UtSUlJIEF0dGVudGlvbjwvdGQ+PHRkPkFDRS1JSUkgRXhla3V0aXYvIEZsdWVuY3k8L3RkPjx0ZD5BQ0UtSUlJIGxhbmd1YWdlPC90ZD48dGQ+QUNFLUlJSSB2aXNvc3BhdGlhbDwvdGQ+PHRkPk1NU0UgVG90YWwgU2NvcmU8L3RkPjx0ZD5Ib3NwaXRhbCBBbnhpZXR5IGFuZCBEZXByZXNzaW9uIHNjYWxlOiBhbnhpZXR5IHNjb3JlIChvYnNlcnZhYmxlIGVudGl0eSk8L3RkPjx0ZD5Ib3NwaXRhbCBBbnhpZXR5IGFuZCBEZXByZXNzaW9uIHNjYWxlOiBkZXByZXNzaW9uIHNjb3JlIChvYnNlcnZhYmxlIGVudGl0eSk8L3RkPjx0ZD5NT0NBIFRvdGFsIFNjb3JlPC90ZD48L3RyPlxuPHRyPjx0ZD4yMDE4LTEyLTA0PC90ZD48dGQ+Nzk8L3RkPjx0ZD4xOTM5LTAyLTAxPC90ZD48dGQ+TWFsZTwvdGQ+PHRkPjEzMDAtMTU2MDwvdGQ+PHRkPmRpdm9yY2VkPC90ZD48dGQ+MTI8L3RkPjx0ZD5ObzwvdGQ+PHRkPklDRDEwOkYwNi43PC90ZD48dGQ+Tm88L3RkPjx0ZD5ObzwvdGQ+PHRkPlRJQSBtaXQgU2Nod2luZGVsLCBhYnNvbHV0ZSBBcnJoeXRtaWUgYmVpIFZvcmhvZmZsaW1tZXJuLCBQb2x5bmV1cm9wYXRoaWUgYmVpbmJldG9udCwgQ2FycGFsdHVubmVsIFN5bmRyb20sIFRhc2FsdHVubmVsc3luZHJvbSByZWNodHMsIFNha2t1bHVzZnVua3Rpb25zc3TDtnJ1bmcgbGlua3MsIHBhcm94eXNtYWxlciBMYWdlcnVuZ3NzY2h3aW5kZWwsIGFydGVyaWVsbGUgSHlwZXJ0b25pZSwgSHlwZXJsaXBpZMOkbWllLCBNeW9va2FyZGhpbnRlcndhbmRzaW5mYWt0IChTVEVOVCksIFNjaGxhZmFwbm9lLCBQcm9zdGF0YWh5cGVycGxhc2llLCBjaHJvbmlzY2hlIE5pZXJlbmluc3VmZml6aWVueiBHcmFkIElJLCBTcGluYWxrYW5hbHN0ZW5vc2U8L3RkPjx0ZD5ZZXM8L3RkPjx0ZD5ZZXM8L3RkPjx0ZD5ObzwvdGQ+PHRkPm51bGw8L3RkPjx0ZD5ObzwvdGQ+PHRkPm51bGw8L3RkPjx0ZD4xMzU8L3RkPjx0ZD45NjwvdGQ+PHRkPjY0PC90ZD48dGQ+WWVzPC90ZD48dGQ+bnVsbDwvdGQ+PHRkPjk4Ny45PC90ZD48dGQ+NDE1Ljg8L3RkPjx0ZD4xMDkuNzwvdGQ+PHRkPlllczwvdGQ+PHRkPjYuMTwvdGQ+PHRkPjkuMTwvdGQ+PHRkPjQuODwvdGQ+PHRkPjAuNDM8L3RkPjx0ZD4xNzg8L3RkPjx0ZD4xLjI8L3RkPjx0ZD4yOS41PC90ZD48dGQ+Mi4xNzwvdGQ+PHRkPjc0PC90ZD48dGQ+bnVsbDwvdGQ+PHRkPjE0ODwvdGQ+PHRkPjcuMzwvdGQ+PHRkPmdlcmluZ2UgSGlybnZvbHV0aW9uIHVuZCBtw6TDn2lnZ3JhZGlnZSBtaWtyb2FuZ2lvcGF0aGlzY2hlIE1hcmtsYWdlcnZlcsOkbmRlcnVuZ2VuPC90ZD48dGQ+Tm88L3RkPjx0ZD5NUkkgb2YgYnJhaW4gYWJub3JtYWw8L3RkPjx0ZD45MTwvdGQ+PHRkPjI1PC90ZD48dGQ+MTY8L3RkPjx0ZD4xMDwvdGQ+PHRkPjI2PC90ZD48dGQ+MTQ8L3RkPjx0ZD4yNzwvdGQ+PHRkPjY8L3RkPjx0ZD44PC90ZD48dGQ+MjI8L3RkPjwvdHI+XG48L3RhYmxlPlxuPGgzPlZpc2l0ZTogMjwvaDM+XG48dGFibGUgaWQ9XCJ2aXNpdGVfMlwiPlxuPHRyPjx0ZD5zdGFydCB0aW1lPC90ZD48dGQ+RGF0ZSBvZiBiaXJ0aDwvdGQ+PHRkPkFnZTwvdGQ+PHRkPkdlbmRlcjwvdGQ+PHRkPk1hcml0dWFsIHN0YXR1czwvdGQ+PHRkPlByaW1hcnkgRGlhZ25vc2lzPC90ZD48dGQ+RHVyYXRpb24gb2YgZnJvbWFsIGVkdWNhdGlvbjwvdGQ+PHRkPkxpdmVzIGFsb25lIChmaW5kaW5nKTwvdGQ+PHRkPkZhbWlseSBIaXN0b3J5IG9mIGRlbWVudGlhIDwvdGQ+PHRkPkh5cGVydGVuc2l2ZSBkaXNvcmRlciwgc3lzdGVtaWMgYXJ0ZXJpYWwgKGRpc29yZGVyKTwvdGQ+PHRkPlByb2dyZWRpZW56IHp1IERlbWVuejwvdGQ+PHRkPkhlYXJ0IGRpc2Vhc2U8L3RkPjx0ZD5EaWFiZXRlcyBtZWxsaXR1cyAyPC90ZD48dGQ+RGVwcmVzc2lvbiAoZGlzb3JkZXIpPC90ZD48dGQ+VGFiYWNjbyBTbW9raW5nIHN0YXR1czwvdGQ+PHRkPkVpbm5haG1lIERlbWVueiBNZWRpa2FtZW50PC90ZD48dGQ+Q3VycmVudCBtZWRpY2F0aW9uLCBOYW1lPC90ZD48dGQ+Q3VycmVudCBtZWRpY2F0aW9uIERvc2U8L3RkPjx0ZD5DZXJlYnJvc3BpbmFsIGZsdWlkIGV4YW1pbmF0aW9uPC90ZD48dGQ+TGFib3JhdG9yeSB0ZXN0PC90ZD48dGQ+RXJ5dGhyb2N5dGVzICgjL1ZvbHVtZSkgaW4gQmxvb2Q8L3RkPjx0ZD5IZW1vZ2xvYmluIChNYXNzL1ZvbHVtZSkgaW4gQmxvb2Q8L3RkPjx0ZD5MZXVrb2N5dGVzICgjL1ZvbHVtZSkgaW4gQmxvb2Q8L3RkPjx0ZD5IZW1hdG9jcml0IChWb2x1bWUgRnJhY3Rpb24pIG9mIEJsb29kPC90ZD48dGQ+UGxhdGVsZXRzICgjL3ZvbHVtZSkgaW4gQmxvb2Q8L3RkPjx0ZD5JTlIgaW4gQmxvb2QgYnkgQ29hZ3VsYXRpb24gYXNzYXk8L3RkPjx0ZD5MREwtQ2hvbGVzdGVyaW4gKE1vbGVzL1ZvbHVtZSkgaW4gU2VydW0gb3IgUGxhc21hPC90ZD48dGQ+YVBUVCBpbiBCbG9vZCBieSBDLkE8L3RkPjx0ZD5IREwtQ2hvbGVzdGVyaW4gKE1vbGVzL1ZvbHVtZSkgaW4gU2VydW0gb3IgUGxhc21hPC90ZD48dGQ+VHJpZ2x5Y2VyaWRlIChNb2xlcy9Wb2x1bWUpIGluIEJsb29kPC90ZD48dGQ+Q29iYWxhbWluIChWaXRhbWluIEIxMikgKE1vbGVzL3ZvbHVtZSkgaW4gc2VydW0gb3IgcGxhc21hPC90ZD48dGQ+UGhvc3BoYXQgKE1vbC92b2x1bWUpIGluIFNlcnVtIG9yIFBsYXNtYTwvdGQ+PHRkPkZvbHPDpHVyZTwvdGQ+PHRkPlRQTy1BSyAoVGh5cmVvcGVyb3hpZGFzZS1BbnRpa8O2cnBlcik8L3RkPjx0ZD5vbGZhY3Rpb24gdGVzdDwvdGQ+PHRkPkRvcHBsZXIgdWx0cmFzb3VuZDwvdGQ+PHRkPkxhY2hzIC8gR2VzYW10c2NvcmU8L3RkPjx0ZD5CYXJ0aGVsIGluZGV4PC90ZD48L3RyPlxuPHRyPjx0ZD4yMDE5LTAyLTA0PC90ZD48dGQ+MTkzOS0wMi0wMTwvdGQ+PHRkPjgwPC90ZD48dGQ+TWFsZTwvdGQ+PHRkPmRpdm9yY2VkPC90ZD48dGQ+SUNEMTA6RjA2Ljc8L3RkPjx0ZD4xMjwvdGQ+PHRkPk5vPC90ZD48dGQ+Tm88L3RkPjx0ZD5ZZXM8L3RkPjx0ZD5ObzwvdGQ+PHRkPlllczwvdGQ+PHRkPk5vPC90ZD48dGQ+Tm88L3RkPjx0ZD5udWxsPC90ZD48dGQ+WWVzPC90ZD48dGQ+RG9uZXBlemlsPC90ZD48dGQ+NTwvdGQ+PHRkPk5vPC90ZD48dGQ+WWVzPC90ZD48dGQ+NC41PC90ZD48dGQ+bnVsbDwvdGQ+PHRkPjcuMzwvdGQ+PHRkPjAuNDwvdGQ+PHRkPjE3MzwvdGQ+PHRkPjEuMjwvdGQ+PHRkPjEuNjI8L3RkPjx0ZD5udWxsPC90ZD48dGQ+bnVsbDwvdGQ+PHRkPjEuNTk8L3RkPjx0ZD4xNzc8L3RkPjx0ZD4wLjc4PC90ZD48dGQ+NS42PC90ZD48dGQ+MjguMzwvdGQ+PHRkPkFub3NtaWUgKCBMb3NzIG9mIHNlbnNlIG9mIHNtZWxsIChmaW5kaW5nKSk8L3RkPjx0ZD5ObzwvdGQ+PHRkPjEzPC90ZD48dGQ+MTAwPC90ZD48L3RyPlxuPC90YWJsZT5cbjxoMz5WaXNpdGU6IDM8L2gzPlxuPHRhYmxlIGlkPVwidmlzaXRlXzNcIj5cbjx0cj48dGQ+c3RhcnQgdGltZTwvdGQ+PHRkPkRhdGUgb2YgYmlydGg8L3RkPjx0ZD5BZ2U8L3RkPjx0ZD5EdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uPC90ZD48dGQ+TWFyaXR1YWwgc3RhdHVzPC90ZD48dGQ+TGl2ZXMgYWxvbmUgKGZpbmRpbmcpPC90ZD48dGQ+R2VuZGVyPC90ZD48dGQ+UHJvZ3JlZGllbnogenUgRGVtZW56PC90ZD48dGQ+UHJpbWFyeSBEaWFnbm9zaXM8L3RkPjx0ZD5GYW1pbHkgSGlzdG9yeSBvZiBkZW1lbnRpYSA8L3RkPjx0ZD5IZWFydCBkaXNlYXNlPC90ZD48dGQ+RGlhYmV0ZXMgbWVsbGl0dXMgMjwvdGQ+PHRkPkh5cGVydGVuc2l2ZSBkaXNvcmRlciwgc3lzdGVtaWMgYXJ0ZXJpYWwgKGRpc29yZGVyKTwvdGQ+PHRkPlRhYmFjY28gU21va2luZyBzdGF0dXM8L3RkPjx0ZD5EZXByZXNzaW9uIChkaXNvcmRlcik8L3RkPjx0ZD5FaW5uYWhtZSBEZW1lbnogTWVkaWthbWVudDwvdGQ+PHRkPkN1cnJlbnQgbWVkaWNhdGlvbiwgTmFtZTwvdGQ+PHRkPkN1cnJlbnQgbWVkaWNhdGlvbiBEb3NlPC90ZD48dGQ+Q2VyZWJyb3NwaW5hbCBmbHVpZCBleGFtaW5hdGlvbjwvdGQ+PHRkPkFDRS1JSUkgQXR0ZW50aW9uPC90ZD48dGQ+TGFib3JhdG9yeSB0ZXN0PC90ZD48dGQ+QUNFLUlJSTwvdGQ+PHRkPkFDRS1JSUkgTWVtb3J5PC90ZD48dGQ+QUNFLUlJSSBFeGVrdXRpdi8gRmx1ZW5jeTwvdGQ+PHRkPkFDRS1JSUkgbGFuZ3VhZ2U8L3RkPjx0ZD5BQ0UtSUlJIHZpc29zcGF0aWFsPC90ZD48dGQ+TU1TRSBUb3RhbCBTY29yZTwvdGQ+PHRkPkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGFueGlldHkgc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KTwvdGQ+PHRkPkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGRlcHJlc3Npb24gc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KTwvdGQ+PHRkPklRQ09ERSAvIEdlc2FtdHNjb3JlPC90ZD48L3RyPlxuPHRyPjx0ZD4yMDIwLTA5LTIyPC90ZD48dGQ+MTkzOS0wMi0wMTwvdGQ+PHRkPjgxPC90ZD48dGQ+MTI8L3RkPjx0ZD5kaXZvcmNlZDwvdGQ+PHRkPk5vPC90ZD48dGQ+TWFsZTwvdGQ+PHRkPk5vPC90ZD48dGQ+SUNEMTA6RjA2Ljc8L3RkPjx0ZD5ObzwvdGQ+PHRkPlllczwvdGQ+PHRkPk5vPC90ZD48dGQ+WWVzPC90ZD48dGQ+bnVsbDwvdGQ+PHRkPk5vPC90ZD48dGQ+WWVzPC90ZD48dGQ+RG9uZXBlemlsPC90ZD48dGQ+NTwvdGQ+PHRkPk5vPC90ZD48dGQ+MTg8L3RkPjx0ZD5ObzwvdGQ+PHRkPjg5PC90ZD48dGQ+MjM8L3RkPjx0ZD45PC90ZD48dGQ+MjU8L3RkPjx0ZD4xNDwvdGQ+PHRkPjI5PC90ZD48dGQ+OTwvdGQ+PHRkPjk8L3RkPjx0ZD4zLjQzPC90ZD48L3RyPlxuPC90YWJsZT5cbjxoMz5WaXNpdGU6IDQ8L2gzPlxuPHRhYmxlIGlkPVwidmlzaXRlXzRcIj5cbjx0cj48dGQ+c3RhcnQgdGltZTwvdGQ+PHRkPkdlbmRlcjwvdGQ+PHRkPk1hcml0dWFsIHN0YXR1czwvdGQ+PHRkPkRhdGUgb2YgYmlydGg8L3RkPjx0ZD5BZ2U8L3RkPjx0ZD5EdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uPC90ZD48dGQ+TGl2ZXMgYWxvbmUgKGZpbmRpbmcpPC90ZD48dGQ+UHJpbWFyeSBEaWFnbm9zaXM8L3RkPjx0ZD5Qcm9ncmVkaWVueiB6dSBEZW1lbno8L3RkPjx0ZD5GYW1pbHkgSGlzdG9yeSBvZiBkZW1lbnRpYSA8L3RkPjx0ZD5IZWFydCBkaXNlYXNlPC90ZD48dGQ+SHlwZXJ0ZW5zaXZlIGRpc29yZGVyLCBzeXN0ZW1pYyBhcnRlcmlhbCAoZGlzb3JkZXIpPC90ZD48dGQ+RGlhYmV0ZXMgbWVsbGl0dXMgMjwvdGQ+PHRkPkRlcHJlc3Npb24gKGRpc29yZGVyKTwvdGQ+PHRkPlRhYmFjY28gU21va2luZyBzdGF0dXM8L3RkPjx0ZD5FaW5uYWhtZSBEZW1lbnogTWVkaWthbWVudDwvdGQ+PHRkPkN1cnJlbnQgbWVkaWNhdGlvbiwgTmFtZTwvdGQ+PHRkPkN1cnJlbnQgbWVkaWNhdGlvbiBEb3NlPC90ZD48dGQ+TGFib3JhdG9yeSB0ZXN0PC90ZD48dGQ+Q2VyZWJyb3NwaW5hbCBmbHVpZCBleGFtaW5hdGlvbjwvdGQ+PHRkPkFDRS1JSUk8L3RkPjx0ZD5BQ0UtSUlJIEF0dGVudGlvbjwvdGQ+PHRkPkFDRS1JSUkgbGFuZ3VhZ2U8L3RkPjx0ZD5BQ0UtSUlJIEV4ZWt1dGl2LyBGbHVlbmN5PC90ZD48dGQ+QUNFLUlJSSBNZW1vcnk8L3RkPjx0ZD5BQ0UtSUlJIHZpc29zcGF0aWFsPC90ZD48dGQ+TU1TRSBUb3RhbCBTY29yZTwvdGQ+PHRkPkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGRlcHJlc3Npb24gc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KTwvdGQ+PHRkPkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGFueGlldHkgc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KTwvdGQ+PC90cj5cbjx0cj48dGQ+MjAyMS0wOS0wMTwvdGQ+PHRkPk1hbGU8L3RkPjx0ZD5kaXZvcmNlZDwvdGQ+PHRkPjE5MzktMDItMDE8L3RkPjx0ZD44MjwvdGQ+PHRkPjEyPC90ZD48dGQ+Tm88L3RkPjx0ZD5JQ0QxMDpGMDYuNzwvdGQ+PHRkPk5vPC90ZD48dGQ+Tm88L3RkPjx0ZD5ZZXM8L3RkPjx0ZD5ZZXM8L3RkPjx0ZD5ObzwvdGQ+PHRkPk5vPC90ZD48dGQ+bnVsbDwvdGQ+PHRkPlllczwvdGQ+PHRkPkRvbmVwZXppbDwvdGQ+PHRkPjU8L3RkPjx0ZD5ObzwvdGQ+PHRkPk5vPC90ZD48dGQ+ODI8L3RkPjx0ZD4xNzwvdGQ+PHRkPjI2PC90ZD48dGQ+OTwvdGQ+PHRkPjE3PC90ZD48dGQ+MTM8L3RkPjx0ZD4yNzwvdGQ+PHRkPjc8L3RkPjx0ZD43PC90ZD48L3RyPlxuPC90YWJsZT5cbjxoMz5WaXNpdGU6IDU8L2gzPlxuPHRhYmxlIGlkPVwidmlzaXRlXzVcIj5cbjx0cj48dGQ+c3RhcnQgdGltZTwvdGQ+PHRkPkFnZTwvdGQ+PHRkPkRhdGUgb2YgYmlydGg8L3RkPjx0ZD5HZW5kZXI8L3RkPjx0ZD5NYXJpdHVhbCBzdGF0dXM8L3RkPjx0ZD5EdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uPC90ZD48dGQ+TGl2ZXMgYWxvbmUgKGZpbmRpbmcpPC90ZD48dGQ+UHJpbWFyeSBEaWFnbm9zaXM8L3RkPjx0ZD5Qcm9ncmVkaWVueiB6dSBEZW1lbno8L3RkPjx0ZD5TY2h3ZXJlZ3JhZCBkZXIgRGVtZW56PC90ZD48dGQ+Rm9ybSBkZXIgRGVtZW56PC90ZD48dGQ+RmFtaWx5IEhpc3Rvcnkgb2YgZGVtZW50aWEgPC90ZD48dGQ+SGVhcnQgZGlzZWFzZTwvdGQ+PHRkPkh5cGVydGVuc2l2ZSBkaXNvcmRlciwgc3lzdGVtaWMgYXJ0ZXJpYWwgKGRpc29yZGVyKTwvdGQ+PHRkPlByZS1leGlzdGluZyBjb25kaXRpb25zPC90ZD48dGQ+RGVwcmVzc2lvbiAoZGlzb3JkZXIpPC90ZD48dGQ+RGlhYmV0ZXMgbWVsbGl0dXMgMjwvdGQ+PHRkPlRhYmFjY28gU21va2luZyBzdGF0dXM8L3RkPjx0ZD5FaW5uYWhtZSBEZW1lbnogTWVkaWthbWVudDwvdGQ+PHRkPkN1cnJlbnQgbWVkaWNhdGlvbiwgTmFtZTwvdGQ+PHRkPkN1cnJlbnQgbWVkaWNhdGlvbiBEb3NlPC90ZD48dGQ+Q2VyZWJyb3NwaW5hbCBmbHVpZCBleGFtaW5hdGlvbjwvdGQ+PHRkPkxhYm9yYXRvcnkgdGVzdDwvdGQ+PHRkPkVyeXRocm9jeXRlcyAoIy9Wb2x1bWUpIGluIEJsb29kPC90ZD48dGQ+TGV1a29jeXRlcyAoIy9Wb2x1bWUpIGluIEJsb29kPC90ZD48dGQ+SGVtb2dsb2JpbiAoTWFzcy9Wb2x1bWUpIGluIEJsb29kPC90ZD48dGQ+SGVtYXRvY3JpdCAoVm9sdW1lIEZyYWN0aW9uKSBvZiBCbG9vZDwvdGQ+PHRkPlBsYXRlbGV0cyAoIy92b2x1bWUpIGluIEJsb29kPC90ZD48dGQ+SU5SIGluIEJsb29kIGJ5IENvYWd1bGF0aW9uIGFzc2F5PC90ZD48dGQ+YVBUVCBpbiBCbG9vZCBieSBDLkE8L3RkPjx0ZD5rcmVhdGluaW4gKE1hc3MvVm9sb3VtZSkgaW4gQmxvb2Q8L3RkPjx0ZD5VcmVhIChNb2xlcy92b2x1bWUpIGluIFNlcnVtIG9yIFBsYXNtYTwvdGQ+PHRkPkMtcmVha3RpdmVzIFByb3RlaW4gTW9sZXMvVm9sdW1lIGluIHNlcnVtIG9yIFBsYXNtYTogNzY0ODUtMjwvdGQ+PHRkPk5hdHJpdW0gKG1vbGUvdm9sdW1lKSBpbiBCbG9vZDwvdGQ+PHRkPkthbGl1bTwvdGQ+PHRkPkFDRS1JSUk8L3RkPjx0ZD5BQ0UtSUlJIEF0dGVudGlvbjwvdGQ+PHRkPkFDRS1JSUkgTWVtb3J5PC90ZD48dGQ+QUNFLUlJSSBFeGVrdXRpdi8gRmx1ZW5jeTwvdGQ+PHRkPkFDRS1JSUkgdmlzb3NwYXRpYWw8L3RkPjx0ZD5BQ0UtSUlJIGxhbmd1YWdlPC90ZD48dGQ+TU1TRSBUb3RhbCBTY29yZTwvdGQ+PHRkPkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGRlcHJlc3Npb24gc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KTwvdGQ+PHRkPkItQURMIC8gR2VzYW10c2NvcmU8L3RkPjx0ZD5Ib3NwaXRhbCBBbnhpZXR5IGFuZCBEZXByZXNzaW9uIHNjYWxlOiBhbnhpZXR5IHNjb3JlIChvYnNlcnZhYmxlIGVudGl0eSk8L3RkPjx0ZD5JUUNPREUgLyBHZXNhbXRzY29yZTwvdGQ+PC90cj5cbjx0cj48dGQ+MjAyMi0wOS0wNjwvdGQ+PHRkPjgzPC90ZD48dGQ+MTkzOS0wMi0wMTwvdGQ+PHRkPk1hbGU8L3RkPjx0ZD5kaXZvcmNlZDwvdGQ+PHRkPjEyPC90ZD48dGQ+Tm88L3RkPjx0ZD5JQ0QxMDpGMDYuNzwvdGQ+PHRkPlllczwvdGQ+PHRkPm1pbGQgdG8gbW9kZXJhdGU8L3RkPjx0ZD5EZW1lbnogbWl0IGtvcnRpa2FsZXIgQWt6ZW50dWllcnVuZyBhLmUuIEFsemhlaW1lci1EZW1lbno8L3RkPjx0ZD5ObzwvdGQ+PHRkPlllczwvdGQ+PHRkPlllczwvdGQ+PHRkPlNURU1JIGRlciBWb3JkZXJ3YW5kLCBDb3ZpZC4gRmF0aWd1ZS1TeW1wdG9tYXRpazwvdGQ+PHRkPk5vPC90ZD48dGQ+Tm88L3RkPjx0ZD5udWxsPC90ZD48dGQ+WWVzPC90ZD48dGQ+RG9uZXBlemlsPC90ZD48dGQ+NTwvdGQ+PHRkPk5vPC90ZD48dGQ+WWVzPC90ZD48dGQ+bnVsbDwvdGQ+PHRkPjUuOTwvdGQ+PHRkPm51bGw8L3RkPjx0ZD4wLjM4PC90ZD48dGQ+MTcxPC90ZD48dGQ+MS4yPC90ZD48dGQ+bnVsbDwvdGQ+PHRkPjEwMDwvdGQ+PHRkPm51bGw8L3RkPjx0ZD4wLjY8L3RkPjx0ZD4xNDA8L3RkPjx0ZD5udWxsPC90ZD48dGQ+NzM8L3RkPjx0ZD4xNjwvdGQ+PHRkPjEwPC90ZD48dGQ+ODwvdGQ+PHRkPjEzPC90ZD48dGQ+MjY8L3RkPjx0ZD4yNjwvdGQ+PHRkPjk8L3RkPjx0ZD41LjY4PC90ZD48dGQ+NDwvdGQ+PHRkPjQuODY8L3RkPjwvdHI+XG48L3RhYmxlPlxuPC9kaXY+IgogICAgfSwKICAgICJpZGVudGlmaWVyIjogewogICAgICAic3lzdGVtIjogInVybjp1bmRlZmluZWQiLAogICAgICAidmFsdWUiOiAidXJuOnV1aWQ6ODk1ZjZmMjItZjdkNi00ZmViLTkwZDQtZGJmZDQ5YjU0NzFlIgogICAgfSwKICAgICJzdGF0dXMiOiAicHJlbGltaW5hcnkiLAogICAgInR5cGUiOiB7CiAgICAgICJjb2RpbmciOiBbCiAgICAgICAgewogICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICJjb2RlIjogNDA0Njg0MDAzLAogICAgICAgICAgImRpc3BsYXkiOiAiS2xpbmlzY2hlIEJlb2JhY2h0dW5nZW4iCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgInN1YmplY3QiOiB7CiAgICAgICJkaXNwbGF5IjogIjEwMDE5ODE1IiwKICAgICAgImNvZGUiOiB7CiAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgImNvZGUiOiA0MjI1NDkwMDQsCiAgICAgICAgICAgICJkaXNwbGF5IjogIlBhdGllbnQgQ29kZSIKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0KICAgIH0sCiAgICAiZGF0ZSI6ICIyMDIzLTAxLTIyIiwKICAgICJhdXRob3IiOiBbeyAiZGlzcGxheSI6ICJkYkJFU1QiIH1dLAogICAgInRpdGxlIjogIkV4cG9ydCB2b24gZGJCRVNUICh2MjAyMzAxMjEpIC0gS2xpbmlzY2hlIEJlb2JhY2h0dW5nZW4pIiwKICAgICJhdHRlc3RlciI6IFt7ICJtb2RlIjogImxlZ2FsIiwgInRpbWUiOiAiMjAxOC0xMi0wNCIsICJwYXJ0eSI6IHt9IH1dLAogICAgImN1c3RvZGlhbiI6IHt9LAogICAgImV2ZW50IjogWwogICAgICB7CiAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICJjb2RlIjogMzA4MzM1MDA4LAogICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiVmlzaXRlOiAxIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXQogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInBlcmlvZCI6IHsgInN0YXJ0IjogIjIwMTgtMTItMDQiIH0KICAgICAgfSwKICAgICAgewogICAgICAgICJjb2RlIjogWwogICAgICAgICAgewogICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAiY29kZSI6IDMwODMzNTAwOCwKICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlZpc2l0ZTogMiIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJwZXJpb2QiOiB7ICJzdGFydCI6ICIyMDE5LTAyLTA0IiB9CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAiY29kZSI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgImNvZGUiOiAzMDgzMzUwMDgsCiAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJWaXNpdGU6IDMiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicGVyaW9kIjogeyAic3RhcnQiOiAiMjAyMC0wOS0yMiIgfQogICAgICB9LAogICAgICB7CiAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICJjb2RlIjogMzA4MzM1MDA4LAogICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiVmlzaXRlOiA0IgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXQogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInBlcmlvZCI6IHsgInN0YXJ0IjogIjIwMjEtMDktMDEiIH0KICAgICAgfSwKICAgICAgewogICAgICAgICJjb2RlIjogWwogICAgICAgICAgewogICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAiY29kZSI6IDMwODMzNTAwOCwKICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlZpc2l0ZTogNSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJwZXJpb2QiOiB7ICJzdGFydCI6ICIyMDIyLTA5LTA2IiB9CiAgICAgIH0KICAgIF0sCiAgICAic2VjdGlvbiI6IFsKICAgICAgewogICAgICAgICJ0aXRsZSI6ICJWaXNpdGU6IDEiLAogICAgICAgICJjb2RlIjogWwogICAgICAgICAgewogICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAiY29kZSI6IDMwODMzNTAwOCwKICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlZpc2l0ZTogMSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJ0ZXh0IjogeyAic3RhdHVzIjogImdlbmVyYXRlZCIsICJkaXYiOiAiPGgxPlZpc2l0ZTogMTwvaDE+IiB9LAogICAgICAgICJlbnRyeSI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFnZSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNjM5MDAtNSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQWdlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA3OSwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkFnZTwvdGQ+PC90cj48dHI+PHRkPjc5PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJEYXRlIG9mIGJpcnRoIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDE4NDA5OTAwMyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRGF0ZSBvZiBiaXJ0aCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIjE5MzktMDItMDEiLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+RGF0ZSBvZiBiaXJ0aDwvdGQ+PC90cj48dHI+PHRkPjE5MzktMDItMDE8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkdlbmRlciIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAyNjM0OTUwMDAiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkdlbmRlciIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk1hbGUiLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+R2VuZGVyPC90ZD48L3RyPjx0cj48dGQ+TWFsZTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiT2NjdXBhdGlvbiIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNzQyODctNCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiT2NjdXBhdGlvbiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIjEzMDAtMTU2MCIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5PY2N1cGF0aW9uPC90ZD48L3RyPjx0cj48dGQ+MTMwMC0xNTYwPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJNYXJpdHVhbCBzdGF0dXMiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDQ1NDA0LTEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIk1hcml0dWFsIHN0YXR1cyIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogImRpdm9yY2VkIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPk1hcml0dWFsIHN0YXR1czwvdGQ+PC90cj48dHI+PHRkPmRpdm9yY2VkPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJEdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDIyNDI4ODAwMiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRHVyYXRpb24gb2YgZnJvbWFsIGVkdWNhdGlvbiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMTIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uPC90ZD48L3RyPjx0cj48dGQ+MTI8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkxpdmVzIGFsb25lIChmaW5kaW5nKSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAxMDU1MjkwMDgiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkxpdmVzIGFsb25lIChmaW5kaW5nKSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkxpdmVzIGFsb25lIChmaW5kaW5nKTwvdGQ+PC90cj48dHI+PHRkPk5vPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJQcmltYXJ5IERpYWdub3NpcyIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMTg2MzAtNCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiUHJpbWFyeSBEaWFnbm9zaXMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJJQ0QxMDpGMDYuNyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5QcmltYXJ5IERpYWdub3NpczwvdGQ+PC90cj48dHI+PHRkPklDRDEwOkYwNi43PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJQcm9ncmVkaWVueiB6dSBEZW1lbnoiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJDVVNUT006IFBST0dSRVNTSU9OX0RFTUVOVElBIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJQcm9ncmVkaWVueiB6dSBEZW1lbnoiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5Qcm9ncmVkaWVueiB6dSBEZW1lbno8L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRmFtaWx5IEhpc3Rvcnkgb2YgZGVtZW50aWEgIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDM5NDg3NzAwNiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRmFtaWx5IEhpc3Rvcnkgb2YgZGVtZW50aWEgIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiTm8iLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+RmFtaWx5IEhpc3Rvcnkgb2YgZGVtZW50aWEgPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlByZS1leGlzdGluZyBjb25kaXRpb25zIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDEwMjQ3ODAwOCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiUHJlLWV4aXN0aW5nIGNvbmRpdGlvbnMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJUSUEgbWl0IFNjaHdpbmRlbCwgYWJzb2x1dGUgQXJyaHl0bWllIGJlaSBWb3Job2ZmbGltbWVybiwgUG9seW5ldXJvcGF0aGllIGJlaW5iZXRvbnQsIENhcnBhbHR1bm5lbCBTeW5kcm9tLCBUYXNhbHR1bm5lbHN5bmRyb20gcmVjaHRzLCBTYWtrdWx1c2Z1bmt0aW9uc3N0w7ZydW5nIGxpbmtzLCBwYXJveHlzbWFsZXIgTGFnZXJ1bmdzc2Nod2luZGVsLCBhcnRlcmllbGxlIEh5cGVydG9uaWUsIEh5cGVybGlwaWTDpG1pZSwgTXlvb2thcmRoaW50ZXJ3YW5kc2luZmFrdCAoU1RFTlQpLCBTY2hsYWZhcG5vZSwgUHJvc3RhdGFoeXBlcnBsYXNpZSwgY2hyb25pc2NoZSBOaWVyZW5pbnN1ZmZpemllbnogR3JhZCBJSSwgU3BpbmFsa2FuYWxzdGVub3NlIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlByZS1leGlzdGluZyBjb25kaXRpb25zPC90ZD48L3RyPjx0cj48dGQ+VElBIG1pdCBTY2h3aW5kZWwsIGFic29sdXRlIEFycmh5dG1pZSBiZWkgVm9yaG9mZmxpbW1lcm4sIFBvbHluZXVyb3BhdGhpZSBiZWluYmV0b250LCBDYXJwYWx0dW5uZWwgU3luZHJvbSwgVGFzYWx0dW5uZWxzeW5kcm9tIHJlY2h0cywgU2Fra3VsdXNmdW5rdGlvbnNzdMO2cnVuZyBsaW5rcywgcGFyb3h5c21hbGVyIExhZ2VydW5nc3NjaHdpbmRlbCwgYXJ0ZXJpZWxsZSBIeXBlcnRvbmllLCBIeXBlcmxpcGlkw6RtaWUsIE15b29rYXJkaGludGVyd2FuZHNpbmZha3QgKFNURU5UKSwgU2NobGFmYXBub2UsIFByb3N0YXRhaHlwZXJwbGFzaWUsIGNocm9uaXNjaGUgTmllcmVuaW5zdWZmaXppZW56IEdyYWQgSUksIFNwaW5hbGthbmFsc3Rlbm9zZTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSGVhcnQgZGlzZWFzZSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA1NjI2NTAwMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSGVhcnQgZGlzZWFzZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIlllcyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IZWFydCBkaXNlYXNlPC90ZD48L3RyPjx0cj48dGQ+WWVzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJIeXBlcnRlbnNpdmUgZGlzb3JkZXIsIHN5c3RlbWljIGFydGVyaWFsIChkaXNvcmRlcikiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMzgzNDEwMDMiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkh5cGVydGVuc2l2ZSBkaXNvcmRlciwgc3lzdGVtaWMgYXJ0ZXJpYWwgKGRpc29yZGVyKSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIlllcyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IeXBlcnRlbnNpdmUgZGlzb3JkZXIsIHN5c3RlbWljIGFydGVyaWFsIChkaXNvcmRlcik8L3RkPjwvdHI+PHRyPjx0ZD5ZZXM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkRpYWJldGVzIG1lbGxpdHVzIDIiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDQwNTQwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkRpYWJldGVzIG1lbGxpdHVzIDIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EaWFiZXRlcyBtZWxsaXR1cyAyPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlRhYmFjY28gU21va2luZyBzdGF0dXMiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDcyMTY2LTIiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlRhYmFjY28gU21va2luZyBzdGF0dXMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IG51bGwsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5UYWJhY2NvIFNtb2tpbmcgc3RhdHVzPC90ZD48L3RyPjx0cj48dGQ+bnVsbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRGVwcmVzc2lvbiAoZGlzb3JkZXIpIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDM1NDg5MDA3IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJEZXByZXNzaW9uIChkaXNvcmRlcikiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EZXByZXNzaW9uIChkaXNvcmRlcik8L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSGlzdG9yeSBvZiBBbGNvaG9sIHVzZSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMTEzMzEtNiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSGlzdG9yeSBvZiBBbGNvaG9sIHVzZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogbnVsbCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkhpc3Rvcnkgb2YgQWxjb2hvbCB1c2U8L3RkPjwvdHI+PHRyPjx0ZD5udWxsPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJCbG9vZCBwcmVzc3VyZSBzeXN0b2xpYyIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogODQ4MC02IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJCbG9vZCBwcmVzc3VyZSBzeXN0b2xpYyIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMTM1LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+Qmxvb2QgcHJlc3N1cmUgc3lzdG9saWM8L3RkPjwvdHI+PHRyPjx0ZD4xMzU8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkJsb29kIHByZXNzdXJlIGRpYXN0b2xpYyIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogODQ2Mi00IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJCbG9vZCBwcmVzc3VyZSBkaWFzdG9saWMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDk2LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+Qmxvb2QgcHJlc3N1cmUgZGlhc3RvbGljPC90ZD48L3RyPjx0cj48dGQ+OTY8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkhlYXJ0IHJhdGUiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDg4NjctNCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSGVhcnQgcmF0ZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogNjQsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IZWFydCByYXRlPC90ZD48L3RyPjx0cj48dGQ+NjQ8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkNlcmVicm9zcGluYWwgZmx1aWQgZXhhbWluYXRpb24iLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMTY3Njk5MDAwIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJDZXJlYnJvc3BpbmFsIGZsdWlkIGV4YW1pbmF0aW9uIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiWWVzIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkNlcmVicm9zcGluYWwgZmx1aWQgZXhhbWluYXRpb248L3RkPjwvdHI+PHRyPjx0ZD5ZZXM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkNlcmVicm9zcGluYWwgZmx1aWQgc3BlY2ltZW4gKHNwZWNpbWVuKSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAyNTg0NTAwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkNlcmVicm9zcGluYWwgZmx1aWQgc3BlY2ltZW4gKHNwZWNpbWVuKSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogbnVsbCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkNlcmVicm9zcGluYWwgZmx1aWQgc3BlY2ltZW4gKHNwZWNpbWVuKTwvdGQ+PC90cj48dHI+PHRkPm51bGw8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlRhdS1Qcm90ZWluIChNYXNzL1ZvbHVtZSkgaW4gQ2VyZWJyYWwgc3BpbmFsIGZsdWlkIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAzMDE2MC02IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJUYXUtUHJvdGVpbiAoTWFzcy9Wb2x1bWUpIGluIENlcmVicmFsIHNwaW5hbCBmbHVpZCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogOTg3LjksCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5UYXUtUHJvdGVpbiAoTWFzcy9Wb2x1bWUpIGluIENlcmVicmFsIHNwaW5hbCBmbHVpZDwvdGQ+PC90cj48dHI+PHRkPjk4Ny45PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJBbXlsb2lkIGJldGEgNDIgcGVwdGlkZSAoTWFzcy9Wb2x1bWUpIGluIGNlcmVicmFsIHNwaW5hbCBmbHVpZCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMzMyMDMtMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQW15bG9pZCBiZXRhIDQyIHBlcHRpZGUgKE1hc3MvVm9sdW1lKSBpbiBjZXJlYnJhbCBzcGluYWwgZmx1aWQiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDQxNS44LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QW15bG9pZCBiZXRhIDQyIHBlcHRpZGUgKE1hc3MvVm9sdW1lKSBpbiBjZXJlYnJhbCBzcGluYWwgZmx1aWQ8L3RkPjwvdHI+PHRyPjx0ZD40MTUuODwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiUGhvc3Bob3J5bGF0ZWQgdGF1IDE4MSAoTWFzcy9Wb2x1bWUpIGluIGNlcmVicmFsIHNwaW5hbCBmbHVpZCBieSBJbW11bm9hc3NheSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNzIyNjAtMyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiUGhvc3Bob3J5bGF0ZWQgdGF1IDE4MSAoTWFzcy9Wb2x1bWUpIGluIGNlcmVicmFsIHNwaW5hbCBmbHVpZCBieSBJbW11bm9hc3NheSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMTA5LjcsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5QaG9zcGhvcnlsYXRlZCB0YXUgMTgxIChNYXNzL1ZvbHVtZSkgaW4gY2VyZWJyYWwgc3BpbmFsIGZsdWlkIGJ5IEltbXVub2Fzc2F5PC90ZD48L3RyPjx0cj48dGQ+MTA5Ljc8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkxhYm9yYXRvcnkgdGVzdCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAxNTIyMDAwMCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTGFib3JhdG9yeSB0ZXN0IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiWWVzIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkxhYm9yYXRvcnkgdGVzdDwvdGQ+PC90cj48dHI+PHRkPlllczwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTGV1a29jeXRlcyAoIy9Wb2x1bWUpIGluIEJsb29kIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAyNjQ2NC04IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJMZXVrb2N5dGVzICgjL1ZvbHVtZSkgaW4gQmxvb2QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDYuMSwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkxldWtvY3l0ZXMgKCMvVm9sdW1lKSBpbiBCbG9vZDwvdGQ+PC90cj48dHI+PHRkPjYuMTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSGVtb2dsb2JpbiAoTWFzcy9Wb2x1bWUpIGluIEJsb29kIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiA3MTgtNyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSGVtb2dsb2JpbiAoTWFzcy9Wb2x1bWUpIGluIEJsb29kIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA5LjEsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IZW1vZ2xvYmluIChNYXNzL1ZvbHVtZSkgaW4gQmxvb2Q8L3RkPjwvdHI+PHRyPjx0ZD45LjE8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkVyeXRocm9jeXRlcyAoIy9Wb2x1bWUpIGluIEJsb29kIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAyNjQ1My0xIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJFcnl0aHJvY3l0ZXMgKCMvVm9sdW1lKSBpbiBCbG9vZCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogNC44LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+RXJ5dGhyb2N5dGVzICgjL1ZvbHVtZSkgaW4gQmxvb2Q8L3RkPjwvdHI+PHRyPjx0ZD40Ljg8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkhlbWF0b2NyaXQgKFZvbHVtZSBGcmFjdGlvbikgb2YgQmxvb2QiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDIwNTcwLTgiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkhlbWF0b2NyaXQgKFZvbHVtZSBGcmFjdGlvbikgb2YgQmxvb2QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDAuNDMsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IZW1hdG9jcml0IChWb2x1bWUgRnJhY3Rpb24pIG9mIEJsb29kPC90ZD48L3RyPjx0cj48dGQ+MC40MzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiUGxhdGVsZXRzICgjL3ZvbHVtZSkgaW4gQmxvb2QiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDI2NTE1LTciLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlBsYXRlbGV0cyAoIy92b2x1bWUpIGluIEJsb29kIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAxNzgsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5QbGF0ZWxldHMgKCMvdm9sdW1lKSBpbiBCbG9vZDwvdGQ+PC90cj48dHI+PHRkPjE3ODwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSU5SIGluIEJsb29kIGJ5IENvYWd1bGF0aW9uIGFzc2F5IiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAzNDcxNC02IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJJTlIgaW4gQmxvb2QgYnkgQ29hZ3VsYXRpb24gYXNzYXkiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDEuMiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPklOUiBpbiBCbG9vZCBieSBDb2FndWxhdGlvbiBhc3NheTwvdGQ+PC90cj48dHI+PHRkPjEuMjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiYVBUVCBpbiBCbG9vZCBieSBDLkEiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDMxNzMtMiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiYVBUVCBpbiBCbG9vZCBieSBDLkEiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDI5LjUsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5hUFRUIGluIEJsb29kIGJ5IEMuQTwvdGQ+PC90cj48dHI+PHRkPjI5LjU8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkxETC1DaG9sZXN0ZXJpbiAoTW9sZXMvVm9sdW1lKSBpbiBTZXJ1bSBvciBQbGFzbWEiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDIyNzQ4LTgiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkxETC1DaG9sZXN0ZXJpbiAoTW9sZXMvVm9sdW1lKSBpbiBTZXJ1bSBvciBQbGFzbWEiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDIuMTcsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5MREwtQ2hvbGVzdGVyaW4gKE1vbGVzL1ZvbHVtZSkgaW4gU2VydW0gb3IgUGxhc21hPC90ZD48L3RyPjx0cj48dGQ+Mi4xNzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAia3JlYXRpbmluIChNYXNzL1ZvbG91bWUpIGluIEJsb29kIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAzODQ4My00IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJrcmVhdGluaW4gKE1hc3MvVm9sb3VtZSkgaW4gQmxvb2QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDc0LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+a3JlYXRpbmluIChNYXNzL1ZvbG91bWUpIGluIEJsb29kPC90ZD48L3RyPjx0cj48dGQ+NzQ8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkhETC1DaG9sZXN0ZXJpbiAoTW9sZXMvVm9sdW1lKSBpbiBTZXJ1bSBvciBQbGFzbWEiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDE0NjQ2LTQiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkhETC1DaG9sZXN0ZXJpbiAoTW9sZXMvVm9sdW1lKSBpbiBTZXJ1bSBvciBQbGFzbWEiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IG51bGwsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IREwtQ2hvbGVzdGVyaW4gKE1vbGVzL1ZvbHVtZSkgaW4gU2VydW0gb3IgUGxhc21hPC90ZD48L3RyPjx0cj48dGQ+bnVsbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQ29iYWxhbWluIChWaXRhbWluIEIxMikgKE1vbGVzL3ZvbHVtZSkgaW4gc2VydW0gb3IgcGxhc21hIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAxNDY4NS0yIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJDb2JhbGFtaW4gKFZpdGFtaW4gQjEyKSAoTW9sZXMvdm9sdW1lKSBpbiBzZXJ1bSBvciBwbGFzbWEiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDE0OCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkNvYmFsYW1pbiAoVml0YW1pbiBCMTIpIChNb2xlcy92b2x1bWUpIGluIHNlcnVtIG9yIHBsYXNtYTwvdGQ+PC90cj48dHI+PHRkPjE0ODwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRm9sc8OkdXJlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiA2MzcxODAwMyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRm9sc8OkdXJlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA3LjMsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5Gb2xzw6R1cmU8L3RkPjwvdHI+PHRyPjx0ZD43LjM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkJlZnVuZCBNUlQgU2Now6RkZWwgLyBjTVJUIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiQ1VTVE9NOiBNUklcXEJSQUlOXFxGSU5ESU5HUyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQmVmdW5kIE1SVCBTY2jDpGRlbCAvIGNNUlQiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJnZXJpbmdlIEhpcm52b2x1dGlvbiB1bmQgbcOkw59pZ2dyYWRpZ2UgbWlrcm9hbmdpb3BhdGhpc2NoZSBNYXJrbGFnZXJ2ZXLDpG5kZXJ1bmdlbiIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5CZWZ1bmQgTVJUIFNjaMOkZGVsIC8gY01SVDwvdGQ+PC90cj48dHI+PHRkPmdlcmluZ2UgSGlybnZvbHV0aW9uIHVuZCBtw6TDn2lnZ3JhZGlnZSBtaWtyb2FuZ2lvcGF0aGlzY2hlIE1hcmtsYWdlcnZlcsOkbmRlcnVuZ2VuPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJEb3BwbGVyIHVsdHJhc291bmQiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNzY1MTcyMDA5IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJEb3BwbGVyIHVsdHJhc291bmQiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5Eb3BwbGVyIHVsdHJhc291bmQ8L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTVJJIG9mIGJyYWluIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDgxNjA3NzAwNyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTVJJIG9mIGJyYWluIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiTVJJIG9mIGJyYWluIGFibm9ybWFsIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPk1SSSBvZiBicmFpbjwvdGQ+PC90cj48dHI+PHRkPk1SSSBvZiBicmFpbiBhYm5vcm1hbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQUNFLUlJSSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NDU0MTIwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDkxLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSTwvdGQ+PC90cj48dHI+PHRkPjkxPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJBQ0UtSUlJIE1lbW9yeSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NzMzMTMwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkgTWVtb3J5IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAyNSwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkFDRS1JSUkgTWVtb3J5PC90ZD48L3RyPjx0cj48dGQ+MjU8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFDRS1JSUkgQXR0ZW50aW9uIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQ3MzMxMjAwMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQUNFLUlJSSBBdHRlbnRpb24iCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDE2LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSSBBdHRlbnRpb248L3RkPjwvdHI+PHRyPjx0ZD4xNjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQUNFLUlJSSBFeGVrdXRpdi8gRmx1ZW5jeSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NzMzMTUwMDQiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkgRXhla3V0aXYvIEZsdWVuY3kiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDEwLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSSBFeGVrdXRpdi8gRmx1ZW5jeTwvdGQ+PC90cj48dHI+PHRkPjEwPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJBQ0UtSUlJIGxhbmd1YWdlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQ3MzMxMTAwOCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQUNFLUlJSSBsYW5ndWFnZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMjYsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5BQ0UtSUlJIGxhbmd1YWdlPC90ZD48L3RyPjx0cj48dGQ+MjY8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFDRS1JSUkgdmlzb3NwYXRpYWwiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDczMzE0MDAwIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJBQ0UtSUlJIHZpc29zcGF0aWFsIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAxNCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkFDRS1JSUkgdmlzb3NwYXRpYWw8L3RkPjwvdHI+PHRyPjx0ZD4xNDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTU1TRSBUb3RhbCBTY29yZSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNzIxMDYtOCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTU1TRSBUb3RhbCBTY29yZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMjcsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5NTVNFIFRvdGFsIFNjb3JlPC90ZD48L3RyPjx0cj48dGQ+Mjc8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGFueGlldHkgc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0MDEzMTkwMDUiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGFueGlldHkgc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogNiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGFueGlldHkgc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KTwvdGQ+PC90cj48dHI+PHRkPjY8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGRlcHJlc3Npb24gc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0MDEzMjAwMDQiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGRlcHJlc3Npb24gc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogOCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkhvc3BpdGFsIEFueGlldHkgYW5kIERlcHJlc3Npb24gc2NhbGU6IGRlcHJlc3Npb24gc2NvcmUgKG9ic2VydmFibGUgZW50aXR5KTwvdGQ+PC90cj48dHI+PHRkPjg8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIk1PQ0EgVG90YWwgU2NvcmUiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDcyMTcyLTAiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIk1PQ0EgVG90YWwgU2NvcmUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDIyLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+TU9DQSBUb3RhbCBTY29yZTwvdGQ+PC90cj48dHI+PHRkPjIyPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAidGl0bGUiOiAiVmlzaXRlOiAyIiwKICAgICAgICAiY29kZSI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgImNvZGUiOiAzMDgzMzUwMDgsCiAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJWaXNpdGU6IDIiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAidGV4dCI6IHsgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLCAiZGl2IjogIjxoMT5WaXNpdGU6IDI8L2gxPiIgfSwKICAgICAgICAiZW50cnkiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJEYXRlIG9mIGJpcnRoIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDE4NDA5OTAwMyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRGF0ZSBvZiBiaXJ0aCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIjE5MzktMDItMDEiLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+RGF0ZSBvZiBiaXJ0aDwvdGQ+PC90cj48dHI+PHRkPjE5MzktMDItMDE8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFnZSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNjM5MDAtNSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQWdlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA4MCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkFnZTwvdGQ+PC90cj48dHI+PHRkPjgwPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJHZW5kZXIiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMjYzNDk1MDAwIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJHZW5kZXIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJNYWxlIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkdlbmRlcjwvdGQ+PC90cj48dHI+PHRkPk1hbGU8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIk1hcml0dWFsIHN0YXR1cyIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNDU0MDQtMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTWFyaXR1YWwgc3RhdHVzIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiZGl2b3JjZWQiLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+TWFyaXR1YWwgc3RhdHVzPC90ZD48L3RyPjx0cj48dGQ+ZGl2b3JjZWQ8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlByaW1hcnkgRGlhZ25vc2lzIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAxODYzMC00IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJQcmltYXJ5IERpYWdub3NpcyIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIklDRDEwOkYwNi43IiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlByaW1hcnkgRGlhZ25vc2lzPC90ZD48L3RyPjx0cj48dGQ+SUNEMTA6RjA2Ljc8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkR1cmF0aW9uIG9mIGZyb21hbCBlZHVjYXRpb24iLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMjI0Mjg4MDAyIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJEdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAxMiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkR1cmF0aW9uIG9mIGZyb21hbCBlZHVjYXRpb248L3RkPjwvdHI+PHRyPjx0ZD4xMjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTGl2ZXMgYWxvbmUgKGZpbmRpbmcpIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDEwNTUyOTAwOCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTGl2ZXMgYWxvbmUgKGZpbmRpbmcpIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiTm8iLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+TGl2ZXMgYWxvbmUgKGZpbmRpbmcpPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkZhbWlseSBIaXN0b3J5IG9mIGRlbWVudGlhICIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAzOTQ4NzcwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkZhbWlseSBIaXN0b3J5IG9mIGRlbWVudGlhICIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkZhbWlseSBIaXN0b3J5IG9mIGRlbWVudGlhIDwvdGQ+PC90cj48dHI+PHRkPk5vPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJIeXBlcnRlbnNpdmUgZGlzb3JkZXIsIHN5c3RlbWljIGFydGVyaWFsIChkaXNvcmRlcikiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMzgzNDEwMDMiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkh5cGVydGVuc2l2ZSBkaXNvcmRlciwgc3lzdGVtaWMgYXJ0ZXJpYWwgKGRpc29yZGVyKSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIlllcyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IeXBlcnRlbnNpdmUgZGlzb3JkZXIsIHN5c3RlbWljIGFydGVyaWFsIChkaXNvcmRlcik8L3RkPjwvdHI+PHRyPjx0ZD5ZZXM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlByb2dyZWRpZW56IHp1IERlbWVueiIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkNVU1RPTTogUFJPR1JFU1NJT05fREVNRU5USUEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlByb2dyZWRpZW56IHp1IERlbWVueiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlByb2dyZWRpZW56IHp1IERlbWVuejwvdGQ+PC90cj48dHI+PHRkPk5vPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJIZWFydCBkaXNlYXNlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDU2MjY1MDAxIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJIZWFydCBkaXNlYXNlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiWWVzIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkhlYXJ0IGRpc2Vhc2U8L3RkPjwvdHI+PHRyPjx0ZD5ZZXM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkRpYWJldGVzIG1lbGxpdHVzIDIiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDQwNTQwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkRpYWJldGVzIG1lbGxpdHVzIDIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EaWFiZXRlcyBtZWxsaXR1cyAyPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkRlcHJlc3Npb24gKGRpc29yZGVyKSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAzNTQ4OTAwNyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRGVwcmVzc2lvbiAoZGlzb3JkZXIpIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiTm8iLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+RGVwcmVzc2lvbiAoZGlzb3JkZXIpPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlRhYmFjY28gU21va2luZyBzdGF0dXMiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDcyMTY2LTIiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlRhYmFjY28gU21va2luZyBzdGF0dXMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IG51bGwsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5UYWJhY2NvIFNtb2tpbmcgc3RhdHVzPC90ZD48L3RyPjx0cj48dGQ+bnVsbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRWlubmFobWUgRGVtZW56IE1lZGlrYW1lbnQiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJDVVNUT006IERSVUdJTlRBS0UiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkVpbm5haG1lIERlbWVueiBNZWRpa2FtZW50IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiWWVzIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkVpbm5haG1lIERlbWVueiBNZWRpa2FtZW50PC90ZD48L3RyPjx0cj48dGQ+WWVzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJDdXJyZW50IG1lZGljYXRpb24sIE5hbWUiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDUyNDE4LTEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkN1cnJlbnQgbWVkaWNhdGlvbiwgTmFtZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIkRvbmVwZXppbCIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5DdXJyZW50IG1lZGljYXRpb24sIE5hbWU8L3RkPjwvdHI+PHRyPjx0ZD5Eb25lcGV6aWw8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkN1cnJlbnQgbWVkaWNhdGlvbiBEb3NlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAxODYwNy0yIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJDdXJyZW50IG1lZGljYXRpb24gRG9zZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogNSwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkN1cnJlbnQgbWVkaWNhdGlvbiBEb3NlPC90ZD48L3RyPjx0cj48dGQ+NTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQ2VyZWJyb3NwaW5hbCBmbHVpZCBleGFtaW5hdGlvbiIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAxNjc2OTkwMDAiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkNlcmVicm9zcGluYWwgZmx1aWQgZXhhbWluYXRpb24iCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5DZXJlYnJvc3BpbmFsIGZsdWlkIGV4YW1pbmF0aW9uPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkxhYm9yYXRvcnkgdGVzdCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAxNTIyMDAwMCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTGFib3JhdG9yeSB0ZXN0IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiWWVzIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkxhYm9yYXRvcnkgdGVzdDwvdGQ+PC90cj48dHI+PHRkPlllczwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRXJ5dGhyb2N5dGVzICgjL1ZvbHVtZSkgaW4gQmxvb2QiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDI2NDUzLTEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkVyeXRocm9jeXRlcyAoIy9Wb2x1bWUpIGluIEJsb29kIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA0LjUsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5Fcnl0aHJvY3l0ZXMgKCMvVm9sdW1lKSBpbiBCbG9vZDwvdGQ+PC90cj48dHI+PHRkPjQuNTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSGVtb2dsb2JpbiAoTWFzcy9Wb2x1bWUpIGluIEJsb29kIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiA3MTgtNyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSGVtb2dsb2JpbiAoTWFzcy9Wb2x1bWUpIGluIEJsb29kIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiBudWxsLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+SGVtb2dsb2JpbiAoTWFzcy9Wb2x1bWUpIGluIEJsb29kPC90ZD48L3RyPjx0cj48dGQ+bnVsbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTGV1a29jeXRlcyAoIy9Wb2x1bWUpIGluIEJsb29kIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAyNjQ2NC04IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJMZXVrb2N5dGVzICgjL1ZvbHVtZSkgaW4gQmxvb2QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDcuMywKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkxldWtvY3l0ZXMgKCMvVm9sdW1lKSBpbiBCbG9vZDwvdGQ+PC90cj48dHI+PHRkPjcuMzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSGVtYXRvY3JpdCAoVm9sdW1lIEZyYWN0aW9uKSBvZiBCbG9vZCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMjA1NzAtOCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSGVtYXRvY3JpdCAoVm9sdW1lIEZyYWN0aW9uKSBvZiBCbG9vZCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMC40LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+SGVtYXRvY3JpdCAoVm9sdW1lIEZyYWN0aW9uKSBvZiBCbG9vZDwvdGQ+PC90cj48dHI+PHRkPjAuNDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiUGxhdGVsZXRzICgjL3ZvbHVtZSkgaW4gQmxvb2QiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDI2NTE1LTciLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlBsYXRlbGV0cyAoIy92b2x1bWUpIGluIEJsb29kIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAxNzMsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5QbGF0ZWxldHMgKCMvdm9sdW1lKSBpbiBCbG9vZDwvdGQ+PC90cj48dHI+PHRkPjE3MzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSU5SIGluIEJsb29kIGJ5IENvYWd1bGF0aW9uIGFzc2F5IiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAzNDcxNC02IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJJTlIgaW4gQmxvb2QgYnkgQ29hZ3VsYXRpb24gYXNzYXkiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDEuMiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPklOUiBpbiBCbG9vZCBieSBDb2FndWxhdGlvbiBhc3NheTwvdGQ+PC90cj48dHI+PHRkPjEuMjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTERMLUNob2xlc3RlcmluIChNb2xlcy9Wb2x1bWUpIGluIFNlcnVtIG9yIFBsYXNtYSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMjI3NDgtOCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTERMLUNob2xlc3RlcmluIChNb2xlcy9Wb2x1bWUpIGluIFNlcnVtIG9yIFBsYXNtYSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMS42MiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkxETC1DaG9sZXN0ZXJpbiAoTW9sZXMvVm9sdW1lKSBpbiBTZXJ1bSBvciBQbGFzbWE8L3RkPjwvdHI+PHRyPjx0ZD4xLjYyPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJhUFRUIGluIEJsb29kIGJ5IEMuQSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMzE3My0yIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJhUFRUIGluIEJsb29kIGJ5IEMuQSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogbnVsbCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPmFQVFQgaW4gQmxvb2QgYnkgQy5BPC90ZD48L3RyPjx0cj48dGQ+bnVsbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSERMLUNob2xlc3RlcmluIChNb2xlcy9Wb2x1bWUpIGluIFNlcnVtIG9yIFBsYXNtYSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMTQ2NDYtNCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSERMLUNob2xlc3RlcmluIChNb2xlcy9Wb2x1bWUpIGluIFNlcnVtIG9yIFBsYXNtYSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogbnVsbCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkhETC1DaG9sZXN0ZXJpbiAoTW9sZXMvVm9sdW1lKSBpbiBTZXJ1bSBvciBQbGFzbWE8L3RkPjwvdHI+PHRyPjx0ZD5udWxsPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJUcmlnbHljZXJpZGUgKE1vbGVzL1ZvbHVtZSkgaW4gQmxvb2QiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDE0OTI3LTgiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlRyaWdseWNlcmlkZSAoTW9sZXMvVm9sdW1lKSBpbiBCbG9vZCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMS41OSwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlRyaWdseWNlcmlkZSAoTW9sZXMvVm9sdW1lKSBpbiBCbG9vZDwvdGQ+PC90cj48dHI+PHRkPjEuNTk8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkNvYmFsYW1pbiAoVml0YW1pbiBCMTIpIChNb2xlcy92b2x1bWUpIGluIHNlcnVtIG9yIHBsYXNtYSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMTQ2ODUtMiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQ29iYWxhbWluIChWaXRhbWluIEIxMikgKE1vbGVzL3ZvbHVtZSkgaW4gc2VydW0gb3IgcGxhc21hIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAxNzcsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5Db2JhbGFtaW4gKFZpdGFtaW4gQjEyKSAoTW9sZXMvdm9sdW1lKSBpbiBzZXJ1bSBvciBwbGFzbWE8L3RkPjwvdHI+PHRyPjx0ZD4xNzc8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlBob3NwaGF0IChNb2wvdm9sdW1lKSBpbiBTZXJ1bSBvciBQbGFzbWEiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDE0ODc5LTEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlBob3NwaGF0IChNb2wvdm9sdW1lKSBpbiBTZXJ1bSBvciBQbGFzbWEiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDAuNzgsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5QaG9zcGhhdCAoTW9sL3ZvbHVtZSkgaW4gU2VydW0gb3IgUGxhc21hPC90ZD48L3RyPjx0cj48dGQ+MC43ODwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRm9sc8OkdXJlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiA2MzcxODAwMyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRm9sc8OkdXJlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA1LjYsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5Gb2xzw6R1cmU8L3RkPjwvdHI+PHRyPjx0ZD41LjY8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlRQTy1BSyAoVGh5cmVvcGVyb3hpZGFzZS1BbnRpa8O2cnBlcikiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IExQNDAwMDEtNyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiVFBPLUFLIChUaHlyZW9wZXJveGlkYXNlLUFudGlrw7ZycGVyKSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMjguMywKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlRQTy1BSyAoVGh5cmVvcGVyb3hpZGFzZS1BbnRpa8O2cnBlcik8L3RkPjwvdHI+PHRyPjx0ZD4yOC4zPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJvbGZhY3Rpb24gdGVzdCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAyNTI1NTkwMDMiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIm9sZmFjdGlvbiB0ZXN0IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiQW5vc21pZSAoIExvc3Mgb2Ygc2Vuc2Ugb2Ygc21lbGwgKGZpbmRpbmcpKSIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5vbGZhY3Rpb24gdGVzdDwvdGQ+PC90cj48dHI+PHRkPkFub3NtaWUgKCBMb3NzIG9mIHNlbnNlIG9mIHNtZWxsIChmaW5kaW5nKSk8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkRvcHBsZXIgdWx0cmFzb3VuZCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA3NjUxNzIwMDkiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkRvcHBsZXIgdWx0cmFzb3VuZCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkRvcHBsZXIgdWx0cmFzb3VuZDwvdGQ+PC90cj48dHI+PHRkPk5vPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJMYWNocyAvIEdlc2FtdHNjb3JlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiQ1VTVE9NOiBOUFxcTEFDSFMiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkxhY2hzIC8gR2VzYW10c2NvcmUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICIxMyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5MYWNocyAvIEdlc2FtdHNjb3JlPC90ZD48L3RyPjx0cj48dGQ+MTM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkJhcnRoZWwgaW5kZXgiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMjczMzAyMDA1IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJCYXJ0aGVsIGluZGV4IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAxMDAsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5CYXJ0aGVsIGluZGV4PC90ZD48L3RyPjx0cj48dGQ+MTAwPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAidGl0bGUiOiAiVmlzaXRlOiAzIiwKICAgICAgICAiY29kZSI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgImNvZGUiOiAzMDgzMzUwMDgsCiAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJWaXNpdGU6IDMiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAidGV4dCI6IHsgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLCAiZGl2IjogIjxoMT5WaXNpdGU6IDM8L2gxPiIgfSwKICAgICAgICAiZW50cnkiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJEYXRlIG9mIGJpcnRoIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDE4NDA5OTAwMyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRGF0ZSBvZiBiaXJ0aCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIjE5MzktMDItMDEiLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+RGF0ZSBvZiBiaXJ0aDwvdGQ+PC90cj48dHI+PHRkPjE5MzktMDItMDE8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFnZSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNjM5MDAtNSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQWdlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA4MSwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkFnZTwvdGQ+PC90cj48dHI+PHRkPjgxPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJEdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDIyNDI4ODAwMiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRHVyYXRpb24gb2YgZnJvbWFsIGVkdWNhdGlvbiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMTIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uPC90ZD48L3RyPjx0cj48dGQ+MTI8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIk1hcml0dWFsIHN0YXR1cyIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNDU0MDQtMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTWFyaXR1YWwgc3RhdHVzIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiZGl2b3JjZWQiLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+TWFyaXR1YWwgc3RhdHVzPC90ZD48L3RyPjx0cj48dGQ+ZGl2b3JjZWQ8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkxpdmVzIGFsb25lIChmaW5kaW5nKSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAxMDU1MjkwMDgiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkxpdmVzIGFsb25lIChmaW5kaW5nKSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkxpdmVzIGFsb25lIChmaW5kaW5nKTwvdGQ+PC90cj48dHI+PHRkPk5vPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJHZW5kZXIiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMjYzNDk1MDAwIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJHZW5kZXIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJNYWxlIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkdlbmRlcjwvdGQ+PC90cj48dHI+PHRkPk1hbGU8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlByb2dyZWRpZW56IHp1IERlbWVueiIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkNVU1RPTTogUFJPR1JFU1NJT05fREVNRU5USUEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlByb2dyZWRpZW56IHp1IERlbWVueiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlByb2dyZWRpZW56IHp1IERlbWVuejwvdGQ+PC90cj48dHI+PHRkPk5vPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJQcmltYXJ5IERpYWdub3NpcyIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMTg2MzAtNCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiUHJpbWFyeSBEaWFnbm9zaXMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJJQ0QxMDpGMDYuNyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5QcmltYXJ5IERpYWdub3NpczwvdGQ+PC90cj48dHI+PHRkPklDRDEwOkYwNi43PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJGYW1pbHkgSGlzdG9yeSBvZiBkZW1lbnRpYSAiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMzk0ODc3MDA2IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJGYW1pbHkgSGlzdG9yeSBvZiBkZW1lbnRpYSAiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5GYW1pbHkgSGlzdG9yeSBvZiBkZW1lbnRpYSA8L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSGVhcnQgZGlzZWFzZSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA1NjI2NTAwMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSGVhcnQgZGlzZWFzZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIlllcyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IZWFydCBkaXNlYXNlPC90ZD48L3RyPjx0cj48dGQ+WWVzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJEaWFiZXRlcyBtZWxsaXR1cyAyIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQ0MDU0MDA2IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJEaWFiZXRlcyBtZWxsaXR1cyAyIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiTm8iLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+RGlhYmV0ZXMgbWVsbGl0dXMgMjwvdGQ+PC90cj48dHI+PHRkPk5vPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJIeXBlcnRlbnNpdmUgZGlzb3JkZXIsIHN5c3RlbWljIGFydGVyaWFsIChkaXNvcmRlcikiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMzgzNDEwMDMiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkh5cGVydGVuc2l2ZSBkaXNvcmRlciwgc3lzdGVtaWMgYXJ0ZXJpYWwgKGRpc29yZGVyKSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIlllcyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IeXBlcnRlbnNpdmUgZGlzb3JkZXIsIHN5c3RlbWljIGFydGVyaWFsIChkaXNvcmRlcik8L3RkPjwvdHI+PHRyPjx0ZD5ZZXM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlRhYmFjY28gU21va2luZyBzdGF0dXMiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDcyMTY2LTIiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlRhYmFjY28gU21va2luZyBzdGF0dXMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IG51bGwsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5UYWJhY2NvIFNtb2tpbmcgc3RhdHVzPC90ZD48L3RyPjx0cj48dGQ+bnVsbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRGVwcmVzc2lvbiAoZGlzb3JkZXIpIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDM1NDg5MDA3IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJEZXByZXNzaW9uIChkaXNvcmRlcikiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EZXByZXNzaW9uIChkaXNvcmRlcik8L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRWlubmFobWUgRGVtZW56IE1lZGlrYW1lbnQiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJDVVNUT006IERSVUdJTlRBS0UiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkVpbm5haG1lIERlbWVueiBNZWRpa2FtZW50IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiWWVzIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkVpbm5haG1lIERlbWVueiBNZWRpa2FtZW50PC90ZD48L3RyPjx0cj48dGQ+WWVzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJDdXJyZW50IG1lZGljYXRpb24sIE5hbWUiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDUyNDE4LTEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkN1cnJlbnQgbWVkaWNhdGlvbiwgTmFtZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIkRvbmVwZXppbCIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5DdXJyZW50IG1lZGljYXRpb24sIE5hbWU8L3RkPjwvdHI+PHRyPjx0ZD5Eb25lcGV6aWw8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkN1cnJlbnQgbWVkaWNhdGlvbiBEb3NlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAxODYwNy0yIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJDdXJyZW50IG1lZGljYXRpb24gRG9zZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogNSwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkN1cnJlbnQgbWVkaWNhdGlvbiBEb3NlPC90ZD48L3RyPjx0cj48dGQ+NTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQ2VyZWJyb3NwaW5hbCBmbHVpZCBleGFtaW5hdGlvbiIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAxNjc2OTkwMDAiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkNlcmVicm9zcGluYWwgZmx1aWQgZXhhbWluYXRpb24iCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5DZXJlYnJvc3BpbmFsIGZsdWlkIGV4YW1pbmF0aW9uPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFDRS1JSUkgQXR0ZW50aW9uIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQ3MzMxMjAwMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQUNFLUlJSSBBdHRlbnRpb24iCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDE4LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSSBBdHRlbnRpb248L3RkPjwvdHI+PHRyPjx0ZD4xODwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTGFib3JhdG9yeSB0ZXN0IiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDE1MjIwMDAwIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJMYWJvcmF0b3J5IHRlc3QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5MYWJvcmF0b3J5IHRlc3Q8L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQUNFLUlJSSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NDU0MTIwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDg5LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSTwvdGQ+PC90cj48dHI+PHRkPjg5PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJBQ0UtSUlJIE1lbW9yeSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NzMzMTMwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkgTWVtb3J5IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAyMywKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkFDRS1JSUkgTWVtb3J5PC90ZD48L3RyPjx0cj48dGQ+MjM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFDRS1JSUkgRXhla3V0aXYvIEZsdWVuY3kiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDczMzE1MDA0IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJBQ0UtSUlJIEV4ZWt1dGl2LyBGbHVlbmN5IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA5LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSSBFeGVrdXRpdi8gRmx1ZW5jeTwvdGQ+PC90cj48dHI+PHRkPjk8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFDRS1JSUkgbGFuZ3VhZ2UiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDczMzExMDA4IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJBQ0UtSUlJIGxhbmd1YWdlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAyNSwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkFDRS1JSUkgbGFuZ3VhZ2U8L3RkPjwvdHI+PHRyPjx0ZD4yNTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQUNFLUlJSSB2aXNvc3BhdGlhbCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NzMzMTQwMDAiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkgdmlzb3NwYXRpYWwiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDE0LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSSB2aXNvc3BhdGlhbDwvdGQ+PC90cj48dHI+PHRkPjE0PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJNTVNFIFRvdGFsIFNjb3JlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiA3MjEwNi04IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJNTVNFIFRvdGFsIFNjb3JlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAyOSwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPk1NU0UgVG90YWwgU2NvcmU8L3RkPjwvdHI+PHRyPjx0ZD4yOTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogYW54aWV0eSBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQwMTMxOTAwNSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogYW54aWV0eSBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA5LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+SG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogYW54aWV0eSBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpPC90ZD48L3RyPjx0cj48dGQ+OTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogZGVwcmVzc2lvbiBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQwMTMyMDAwNCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogZGVwcmVzc2lvbiBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA5LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+SG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogZGVwcmVzc2lvbiBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpPC90ZD48L3RyPjx0cj48dGQ+OTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSVFDT0RFIC8gR2VzYW10c2NvcmUiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJDVVNUT006IE5QXFxJUUNPREUiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIklRQ09ERSAvIEdlc2FtdHNjb3JlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAzLjQzLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+SVFDT0RFIC8gR2VzYW10c2NvcmU8L3RkPjwvdHI+PHRyPjx0ZD4zLjQzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAidGl0bGUiOiAiVmlzaXRlOiA0IiwKICAgICAgICAiY29kZSI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgImNvZGUiOiAzMDgzMzUwMDgsCiAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJWaXNpdGU6IDQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAidGV4dCI6IHsgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLCAiZGl2IjogIjxoMT5WaXNpdGU6IDQ8L2gxPiIgfSwKICAgICAgICAiZW50cnkiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJHZW5kZXIiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMjYzNDk1MDAwIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJHZW5kZXIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJNYWxlIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkdlbmRlcjwvdGQ+PC90cj48dHI+PHRkPk1hbGU8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIk1hcml0dWFsIHN0YXR1cyIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNDU0MDQtMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTWFyaXR1YWwgc3RhdHVzIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiZGl2b3JjZWQiLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+TWFyaXR1YWwgc3RhdHVzPC90ZD48L3RyPjx0cj48dGQ+ZGl2b3JjZWQ8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkRhdGUgb2YgYmlydGgiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMTg0MDk5MDAzIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJEYXRlIG9mIGJpcnRoIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiMTkzOS0wMi0wMSIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EYXRlIG9mIGJpcnRoPC90ZD48L3RyPjx0cj48dGQ+MTkzOS0wMi0wMTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQWdlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiA2MzkwMC01IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJBZ2UiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDgyLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QWdlPC90ZD48L3RyPjx0cj48dGQ+ODI8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkR1cmF0aW9uIG9mIGZyb21hbCBlZHVjYXRpb24iLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMjI0Mjg4MDAyIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJEdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAxMiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkR1cmF0aW9uIG9mIGZyb21hbCBlZHVjYXRpb248L3RkPjwvdHI+PHRyPjx0ZD4xMjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTGl2ZXMgYWxvbmUgKGZpbmRpbmcpIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDEwNTUyOTAwOCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTGl2ZXMgYWxvbmUgKGZpbmRpbmcpIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiTm8iLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+TGl2ZXMgYWxvbmUgKGZpbmRpbmcpPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlByaW1hcnkgRGlhZ25vc2lzIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAxODYzMC00IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJQcmltYXJ5IERpYWdub3NpcyIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIklDRDEwOkYwNi43IiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlByaW1hcnkgRGlhZ25vc2lzPC90ZD48L3RyPjx0cj48dGQ+SUNEMTA6RjA2Ljc8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlByb2dyZWRpZW56IHp1IERlbWVueiIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkNVU1RPTTogUFJPR1JFU1NJT05fREVNRU5USUEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlByb2dyZWRpZW56IHp1IERlbWVueiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlByb2dyZWRpZW56IHp1IERlbWVuejwvdGQ+PC90cj48dHI+PHRkPk5vPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJGYW1pbHkgSGlzdG9yeSBvZiBkZW1lbnRpYSAiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMzk0ODc3MDA2IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJGYW1pbHkgSGlzdG9yeSBvZiBkZW1lbnRpYSAiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5GYW1pbHkgSGlzdG9yeSBvZiBkZW1lbnRpYSA8L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSGVhcnQgZGlzZWFzZSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA1NjI2NTAwMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSGVhcnQgZGlzZWFzZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIlllcyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IZWFydCBkaXNlYXNlPC90ZD48L3RyPjx0cj48dGQ+WWVzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJIeXBlcnRlbnNpdmUgZGlzb3JkZXIsIHN5c3RlbWljIGFydGVyaWFsIChkaXNvcmRlcikiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMzgzNDEwMDMiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkh5cGVydGVuc2l2ZSBkaXNvcmRlciwgc3lzdGVtaWMgYXJ0ZXJpYWwgKGRpc29yZGVyKSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIlllcyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IeXBlcnRlbnNpdmUgZGlzb3JkZXIsIHN5c3RlbWljIGFydGVyaWFsIChkaXNvcmRlcik8L3RkPjwvdHI+PHRyPjx0ZD5ZZXM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkRpYWJldGVzIG1lbGxpdHVzIDIiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDQwNTQwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkRpYWJldGVzIG1lbGxpdHVzIDIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EaWFiZXRlcyBtZWxsaXR1cyAyPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkRlcHJlc3Npb24gKGRpc29yZGVyKSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAzNTQ4OTAwNyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRGVwcmVzc2lvbiAoZGlzb3JkZXIpIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiTm8iLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+RGVwcmVzc2lvbiAoZGlzb3JkZXIpPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlRhYmFjY28gU21va2luZyBzdGF0dXMiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDcyMTY2LTIiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlRhYmFjY28gU21va2luZyBzdGF0dXMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IG51bGwsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5UYWJhY2NvIFNtb2tpbmcgc3RhdHVzPC90ZD48L3RyPjx0cj48dGQ+bnVsbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRWlubmFobWUgRGVtZW56IE1lZGlrYW1lbnQiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJDVVNUT006IERSVUdJTlRBS0UiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkVpbm5haG1lIERlbWVueiBNZWRpa2FtZW50IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiWWVzIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkVpbm5haG1lIERlbWVueiBNZWRpa2FtZW50PC90ZD48L3RyPjx0cj48dGQ+WWVzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJDdXJyZW50IG1lZGljYXRpb24sIE5hbWUiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDUyNDE4LTEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkN1cnJlbnQgbWVkaWNhdGlvbiwgTmFtZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIkRvbmVwZXppbCIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5DdXJyZW50IG1lZGljYXRpb24sIE5hbWU8L3RkPjwvdHI+PHRyPjx0ZD5Eb25lcGV6aWw8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkN1cnJlbnQgbWVkaWNhdGlvbiBEb3NlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAxODYwNy0yIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJDdXJyZW50IG1lZGljYXRpb24gRG9zZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogNSwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkN1cnJlbnQgbWVkaWNhdGlvbiBEb3NlPC90ZD48L3RyPjx0cj48dGQ+NTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTGFib3JhdG9yeSB0ZXN0IiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDE1MjIwMDAwIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJMYWJvcmF0b3J5IHRlc3QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5MYWJvcmF0b3J5IHRlc3Q8L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQ2VyZWJyb3NwaW5hbCBmbHVpZCBleGFtaW5hdGlvbiIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAxNjc2OTkwMDAiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkNlcmVicm9zcGluYWwgZmx1aWQgZXhhbWluYXRpb24iCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5DZXJlYnJvc3BpbmFsIGZsdWlkIGV4YW1pbmF0aW9uPC90ZD48L3RyPjx0cj48dGQ+Tm88L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFDRS1JSUkiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDQ1NDEyMDA2IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJBQ0UtSUlJIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA4MiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkFDRS1JSUk8L3RkPjwvdHI+PHRyPjx0ZD44MjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQUNFLUlJSSBBdHRlbnRpb24iLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDczMzEyMDAxIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJBQ0UtSUlJIEF0dGVudGlvbiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMTcsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5BQ0UtSUlJIEF0dGVudGlvbjwvdGQ+PC90cj48dHI+PHRkPjE3PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJBQ0UtSUlJIGxhbmd1YWdlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQ3MzMxMTAwOCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQUNFLUlJSSBsYW5ndWFnZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMjYsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5BQ0UtSUlJIGxhbmd1YWdlPC90ZD48L3RyPjx0cj48dGQ+MjY8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFDRS1JSUkgRXhla3V0aXYvIEZsdWVuY3kiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDczMzE1MDA0IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJBQ0UtSUlJIEV4ZWt1dGl2LyBGbHVlbmN5IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA5LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSSBFeGVrdXRpdi8gRmx1ZW5jeTwvdGQ+PC90cj48dHI+PHRkPjk8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFDRS1JSUkgTWVtb3J5IiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQ3MzMxMzAwNiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQUNFLUlJSSBNZW1vcnkiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDE3LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSSBNZW1vcnk8L3RkPjwvdHI+PHRyPjx0ZD4xNzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQUNFLUlJSSB2aXNvc3BhdGlhbCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NzMzMTQwMDAiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkgdmlzb3NwYXRpYWwiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDEzLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSSB2aXNvc3BhdGlhbDwvdGQ+PC90cj48dHI+PHRkPjEzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJNTVNFIFRvdGFsIFNjb3JlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiA3MjEwNi04IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJNTVNFIFRvdGFsIFNjb3JlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAyNywKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPk1NU0UgVG90YWwgU2NvcmU8L3RkPjwvdHI+PHRyPjx0ZD4yNzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogZGVwcmVzc2lvbiBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQwMTMyMDAwNCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogZGVwcmVzc2lvbiBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA3LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+SG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogZGVwcmVzc2lvbiBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpPC90ZD48L3RyPjx0cj48dGQ+NzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogYW54aWV0eSBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQwMTMxOTAwNSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogYW54aWV0eSBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA3LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+SG9zcGl0YWwgQW54aWV0eSBhbmQgRGVwcmVzc2lvbiBzY2FsZTogYW54aWV0eSBzY29yZSAob2JzZXJ2YWJsZSBlbnRpdHkpPC90ZD48L3RyPjx0cj48dGQ+NzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInRpdGxlIjogIlZpc2l0ZTogNSIsCiAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICJjb2RlIjogMzA4MzM1MDA4LAogICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiVmlzaXRlOiA1IgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXQogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInRleHQiOiB7ICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwgImRpdiI6ICI8aDE+VmlzaXRlOiA1PC9oMT4iIH0sCiAgICAgICAgImVudHJ5IjogWwogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQWdlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiA2MzkwMC01IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJBZ2UiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDgzLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QWdlPC90ZD48L3RyPjx0cj48dGQ+ODM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkRhdGUgb2YgYmlydGgiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMTg0MDk5MDAzIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJEYXRlIG9mIGJpcnRoIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiMTkzOS0wMi0wMSIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EYXRlIG9mIGJpcnRoPC90ZD48L3RyPjx0cj48dGQ+MTkzOS0wMi0wMTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiR2VuZGVyIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDI2MzQ5NTAwMCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiR2VuZGVyIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiTWFsZSIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5HZW5kZXI8L3RkPjwvdHI+PHRyPjx0ZD5NYWxlPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJNYXJpdHVhbCBzdGF0dXMiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDQ1NDA0LTEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIk1hcml0dWFsIHN0YXR1cyIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogImRpdm9yY2VkIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPk1hcml0dWFsIHN0YXR1czwvdGQ+PC90cj48dHI+PHRkPmRpdm9yY2VkPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJEdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDIyNDI4ODAwMiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRHVyYXRpb24gb2YgZnJvbWFsIGVkdWNhdGlvbiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMTIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EdXJhdGlvbiBvZiBmcm9tYWwgZWR1Y2F0aW9uPC90ZD48L3RyPjx0cj48dGQ+MTI8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkxpdmVzIGFsb25lIChmaW5kaW5nKSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAxMDU1MjkwMDgiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkxpdmVzIGFsb25lIChmaW5kaW5nKSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkxpdmVzIGFsb25lIChmaW5kaW5nKTwvdGQ+PC90cj48dHI+PHRkPk5vPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJQcmltYXJ5IERpYWdub3NpcyIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMTg2MzAtNCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiUHJpbWFyeSBEaWFnbm9zaXMiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJJQ0QxMDpGMDYuNyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5QcmltYXJ5IERpYWdub3NpczwvdGQ+PC90cj48dHI+PHRkPklDRDEwOkYwNi43PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJQcm9ncmVkaWVueiB6dSBEZW1lbnoiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJDVVNUT006IFBST0dSRVNTSU9OX0RFTUVOVElBIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJQcm9ncmVkaWVueiB6dSBEZW1lbnoiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJZZXMiLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+UHJvZ3JlZGllbnogenUgRGVtZW56PC90ZD48L3RyPjx0cj48dGQ+WWVzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJTY2h3ZXJlZ3JhZCBkZXIgRGVtZW56IiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiQ1VTVE9NOiBESUFHTk9TSVNfREVNRU5USUEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlNjaHdlcmVncmFkIGRlciBEZW1lbnoiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJtaWxkIHRvIG1vZGVyYXRlIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlNjaHdlcmVncmFkIGRlciBEZW1lbno8L3RkPjwvdHI+PHRyPjx0ZD5taWxkIHRvIG1vZGVyYXRlPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJGb3JtIGRlciBEZW1lbnoiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNTI0NDgwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkZvcm0gZGVyIERlbWVueiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIkRlbWVueiBtaXQga29ydGlrYWxlciBBa3plbnR1aWVydW5nIGEuZS4gQWx6aGVpbWVyLURlbWVueiIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5Gb3JtIGRlciBEZW1lbno8L3RkPjwvdHI+PHRyPjx0ZD5EZW1lbnogbWl0IGtvcnRpa2FsZXIgQWt6ZW50dWllcnVuZyBhLmUuIEFsemhlaW1lci1EZW1lbno8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkZhbWlseSBIaXN0b3J5IG9mIGRlbWVudGlhICIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAzOTQ4NzcwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkZhbWlseSBIaXN0b3J5IG9mIGRlbWVudGlhICIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkZhbWlseSBIaXN0b3J5IG9mIGRlbWVudGlhIDwvdGQ+PC90cj48dHI+PHRkPk5vPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJIZWFydCBkaXNlYXNlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDU2MjY1MDAxIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJIZWFydCBkaXNlYXNlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiWWVzIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkhlYXJ0IGRpc2Vhc2U8L3RkPjwvdHI+PHRyPjx0ZD5ZZXM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkh5cGVydGVuc2l2ZSBkaXNvcmRlciwgc3lzdGVtaWMgYXJ0ZXJpYWwgKGRpc29yZGVyKSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiAzODM0MTAwMyIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSHlwZXJ0ZW5zaXZlIGRpc29yZGVyLCBzeXN0ZW1pYyBhcnRlcmlhbCAoZGlzb3JkZXIpIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiWWVzIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkh5cGVydGVuc2l2ZSBkaXNvcmRlciwgc3lzdGVtaWMgYXJ0ZXJpYWwgKGRpc29yZGVyKTwvdGQ+PC90cj48dHI+PHRkPlllczwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiUHJlLWV4aXN0aW5nIGNvbmRpdGlvbnMiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogMTAyNDc4MDA4IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJQcmUtZXhpc3RpbmcgY29uZGl0aW9ucyIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIlNURU1JIGRlciBWb3JkZXJ3YW5kLCBDb3ZpZC4gRmF0aWd1ZS1TeW1wdG9tYXRpayIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5QcmUtZXhpc3RpbmcgY29uZGl0aW9uczwvdGQ+PC90cj48dHI+PHRkPlNURU1JIGRlciBWb3JkZXJ3YW5kLCBDb3ZpZC4gRmF0aWd1ZS1TeW1wdG9tYXRpazwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRGVwcmVzc2lvbiAoZGlzb3JkZXIpIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDM1NDg5MDA3IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJEZXByZXNzaW9uIChkaXNvcmRlcikiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJObyIsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5EZXByZXNzaW9uIChkaXNvcmRlcik8L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiRGlhYmV0ZXMgbWVsbGl0dXMgMiIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NDA1NDAwNiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRGlhYmV0ZXMgbWVsbGl0dXMgMiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkRpYWJldGVzIG1lbGxpdHVzIDI8L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiVGFiYWNjbyBTbW9raW5nIHN0YXR1cyIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNzIxNjYtMiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiVGFiYWNjbyBTbW9raW5nIHN0YXR1cyIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogbnVsbCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlRhYmFjY28gU21va2luZyBzdGF0dXM8L3RkPjwvdHI+PHRyPjx0ZD5udWxsPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJFaW5uYWhtZSBEZW1lbnogTWVkaWthbWVudCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkNVU1RPTTogRFJVR0lOVEFLRSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRWlubmFobWUgRGVtZW56IE1lZGlrYW1lbnQiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJZZXMiLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+RWlubmFobWUgRGVtZW56IE1lZGlrYW1lbnQ8L3RkPjwvdHI+PHRyPjx0ZD5ZZXM8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkN1cnJlbnQgbWVkaWNhdGlvbiwgTmFtZSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNTI0MTgtMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQ3VycmVudCBtZWRpY2F0aW9uLCBOYW1lIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAiRG9uZXBlemlsIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkN1cnJlbnQgbWVkaWNhdGlvbiwgTmFtZTwvdGQ+PC90cj48dHI+PHRkPkRvbmVwZXppbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQ3VycmVudCBtZWRpY2F0aW9uIERvc2UiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDE4NjA3LTIiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkN1cnJlbnQgbWVkaWNhdGlvbiBEb3NlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA1LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+Q3VycmVudCBtZWRpY2F0aW9uIERvc2U8L3RkPjwvdHI+PHRyPjx0ZD41PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJDZXJlYnJvc3BpbmFsIGZsdWlkIGV4YW1pbmF0aW9uIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDE2NzY5OTAwMCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQ2VyZWJyb3NwaW5hbCBmbHVpZCBleGFtaW5hdGlvbiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogIk5vIiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkNlcmVicm9zcGluYWwgZmx1aWQgZXhhbWluYXRpb248L3RkPjwvdHI+PHRyPjx0ZD5ObzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTGFib3JhdG9yeSB0ZXN0IiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDE1MjIwMDAwIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJMYWJvcmF0b3J5IHRlc3QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6ICJZZXMiLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+TGFib3JhdG9yeSB0ZXN0PC90ZD48L3RyPjx0cj48dGQ+WWVzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJFcnl0aHJvY3l0ZXMgKCMvVm9sdW1lKSBpbiBCbG9vZCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMjY0NTMtMSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiRXJ5dGhyb2N5dGVzICgjL1ZvbHVtZSkgaW4gQmxvb2QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IG51bGwsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5Fcnl0aHJvY3l0ZXMgKCMvVm9sdW1lKSBpbiBCbG9vZDwvdGQ+PC90cj48dHI+PHRkPm51bGw8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkxldWtvY3l0ZXMgKCMvVm9sdW1lKSBpbiBCbG9vZCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMjY0NjQtOCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiTGV1a29jeXRlcyAoIy9Wb2x1bWUpIGluIEJsb29kIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiA1LjksCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5MZXVrb2N5dGVzICgjL1ZvbHVtZSkgaW4gQmxvb2Q8L3RkPjwvdHI+PHRyPjx0ZD41Ljk8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkhlbW9nbG9iaW4gKE1hc3MvVm9sdW1lKSBpbiBCbG9vZCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogNzE4LTciLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkhlbW9nbG9iaW4gKE1hc3MvVm9sdW1lKSBpbiBCbG9vZCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogbnVsbCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkhlbW9nbG9iaW4gKE1hc3MvVm9sdW1lKSBpbiBCbG9vZDwvdGQ+PC90cj48dHI+PHRkPm51bGw8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkhlbWF0b2NyaXQgKFZvbHVtZSBGcmFjdGlvbikgb2YgQmxvb2QiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDIwNTcwLTgiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkhlbWF0b2NyaXQgKFZvbHVtZSBGcmFjdGlvbikgb2YgQmxvb2QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDAuMzgsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5IZW1hdG9jcml0IChWb2x1bWUgRnJhY3Rpb24pIG9mIEJsb29kPC90ZD48L3RyPjx0cj48dGQ+MC4zODwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiUGxhdGVsZXRzICgjL3ZvbHVtZSkgaW4gQmxvb2QiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDI2NTE1LTciLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIlBsYXRlbGV0cyAoIy92b2x1bWUpIGluIEJsb29kIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAxNzEsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5QbGF0ZWxldHMgKCMvdm9sdW1lKSBpbiBCbG9vZDwvdGQ+PC90cj48dHI+PHRkPjE3MTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiSU5SIGluIEJsb29kIGJ5IENvYWd1bGF0aW9uIGFzc2F5IiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAzNDcxNC02IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJJTlIgaW4gQmxvb2QgYnkgQ29hZ3VsYXRpb24gYXNzYXkiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDEuMiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPklOUiBpbiBCbG9vZCBieSBDb2FndWxhdGlvbiBhc3NheTwvdGQ+PC90cj48dHI+PHRkPjEuMjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiYVBUVCBpbiBCbG9vZCBieSBDLkEiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDMxNzMtMiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiYVBUVCBpbiBCbG9vZCBieSBDLkEiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IG51bGwsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5hUFRUIGluIEJsb29kIGJ5IEMuQTwvdGQ+PC90cj48dHI+PHRkPm51bGw8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogImtyZWF0aW5pbiAoTWFzcy9Wb2xvdW1lKSBpbiBCbG9vZCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkxJRDogMzg0ODMtNCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAia3JlYXRpbmluIChNYXNzL1ZvbG91bWUpIGluIEJsb29kIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAxMDAsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5rcmVhdGluaW4gKE1hc3MvVm9sb3VtZSkgaW4gQmxvb2Q8L3RkPjwvdHI+PHRyPjx0ZD4xMDA8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIlVyZWEgKE1vbGVzL3ZvbHVtZSkgaW4gU2VydW0gb3IgUGxhc21hIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAyMjY2NC03IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJVcmVhIChNb2xlcy92b2x1bWUpIGluIFNlcnVtIG9yIFBsYXNtYSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogbnVsbCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPlVyZWEgKE1vbGVzL3ZvbHVtZSkgaW4gU2VydW0gb3IgUGxhc21hPC90ZD48L3RyPjx0cj48dGQ+bnVsbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQy1yZWFrdGl2ZXMgUHJvdGVpbiBNb2xlcy9Wb2x1bWUgaW4gc2VydW0gb3IgUGxhc21hOiA3NjQ4NS0yIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiA3NjQ4NS0yIiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJDLXJlYWt0aXZlcyBQcm90ZWluIE1vbGVzL1ZvbHVtZSBpbiBzZXJ1bSBvciBQbGFzbWE6IDc2NDg1LTIiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDAuNiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkMtcmVha3RpdmVzIFByb3RlaW4gTW9sZXMvVm9sdW1lIGluIHNlcnVtIG9yIFBsYXNtYTogNzY0ODUtMjwvdGQ+PC90cj48dHI+PHRkPjAuNjwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiTmF0cml1bSAobW9sZS92b2x1bWUpIGluIEJsb29kIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiTElEOiAyOTQ3LTAiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIk5hdHJpdW0gKG1vbGUvdm9sdW1lKSBpbiBCbG9vZCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMTQwLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+TmF0cml1bSAobW9sZS92b2x1bWUpIGluIEJsb29kPC90ZD48L3RyPjx0cj48dGQ+MTQwPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJLYWxpdW0iLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDYyOTgtNCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiS2FsaXVtIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiBudWxsLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+S2FsaXVtPC90ZD48L3RyPjx0cj48dGQ+bnVsbDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQUNFLUlJSSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NDU0MTIwMDYiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDczLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSTwvdGQ+PC90cj48dHI+PHRkPjczPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJBQ0UtSUlJIEF0dGVudGlvbiIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NzMzMTIwMDEiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkgQXR0ZW50aW9uIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAidmFsdWUiOiAxNiwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkFDRS1JSUkgQXR0ZW50aW9uPC90ZD48L3RyPjx0cj48dGQ+MTY8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIkFDRS1JSUkgTWVtb3J5IiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQ3MzMxMzAwNiIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQUNFLUlJSSBNZW1vcnkiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDEwLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSSBNZW1vcnk8L3RkPjwvdHI+PHRyPjx0ZD4xMDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQUNFLUlJSSBFeGVrdXRpdi8gRmx1ZW5jeSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NzMzMTUwMDQiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkgRXhla3V0aXYvIEZsdWVuY3kiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDgsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5BQ0UtSUlJIEV4ZWt1dGl2LyBGbHVlbmN5PC90ZD48L3RyPjx0cj48dGQ+ODwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidGl0bGUiOiAiQUNFLUlJSSB2aXNvc3BhdGlhbCIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIlNDVElEOiA0NzMzMTQwMDAiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIkFDRS1JSUkgdmlzb3NwYXRpYWwiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDEzLAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+QUNFLUlJSSB2aXNvc3BhdGlhbDwvdGQ+PC90cj48dHI+PHRkPjEzPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJBQ0UtSUlJIGxhbmd1YWdlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiU0NUSUQ6IDQ3MzMxMTAwOCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQUNFLUlJSSBsYW5ndWFnZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogMjYsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5BQ0UtSUlJIGxhbmd1YWdlPC90ZD48L3RyPjx0cj48dGQ+MjY8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInRpdGxlIjogIk1NU0UgVG90YWwgU2NvcmUiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJMSUQ6IDcyMTA2LTgiLAogICAgICAgICAgICAgICAgICAgICJkaXNwbGF5IjogIk1NU0UgVG90YWwgU2NvcmUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDI2LAogICAgICAgICAgICAidGV4dCI6IHsKICAgICAgICAgICAgICAic3RhdHVzIjogImdlbmVyYXRlZCIsCiAgICAgICAgICAgICAgImRpdiI6ICI8dGFibGU+PHRib2R5Pjx0cj48dGQ+TU1TRSBUb3RhbCBTY29yZTwvdGQ+PC90cj48dHI+PHRkPjI2PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJIb3NwaXRhbCBBbnhpZXR5IGFuZCBEZXByZXNzaW9uIHNjYWxlOiBkZXByZXNzaW9uIHNjb3JlIChvYnNlcnZhYmxlIGVudGl0eSkiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDAxMzIwMDA0IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJIb3NwaXRhbCBBbnhpZXR5IGFuZCBEZXByZXNzaW9uIHNjYWxlOiBkZXByZXNzaW9uIHNjb3JlIChvYnNlcnZhYmxlIGVudGl0eSkiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDksCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5Ib3NwaXRhbCBBbnhpZXR5IGFuZCBEZXByZXNzaW9uIHNjYWxlOiBkZXByZXNzaW9uIHNjb3JlIChvYnNlcnZhYmxlIGVudGl0eSk8L3RkPjwvdHI+PHRyPjx0ZD45PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJCLUFETCAvIEdlc2FtdHNjb3JlIiwKICAgICAgICAgICAgImNvZGUiOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgImNvZGluZyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJzeXN0ZW0iOiAiaHR0cDovL3Nub21lZC5pbmZvL3NjdCIsCiAgICAgICAgICAgICAgICAgICAgImNvZGUiOiAiQ1VTVE9NOiBOUFxcQkFETCIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiQi1BREwgLyBHZXNhbXRzY29yZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgInZhbHVlIjogNS42OCwKICAgICAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAgICAgInN0YXR1cyI6ICJnZW5lcmF0ZWQiLAogICAgICAgICAgICAgICJkaXYiOiAiPHRhYmxlPjx0Ym9keT48dHI+PHRkPkItQURMIC8gR2VzYW10c2NvcmU8L3RkPjwvdHI+PHRyPjx0ZD41LjY4PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJIb3NwaXRhbCBBbnhpZXR5IGFuZCBEZXByZXNzaW9uIHNjYWxlOiBhbnhpZXR5IHNjb3JlIChvYnNlcnZhYmxlIGVudGl0eSkiLAogICAgICAgICAgICAiY29kZSI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiY29kaW5nIjogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInN5c3RlbSI6ICJodHRwOi8vc25vbWVkLmluZm8vc2N0IiwKICAgICAgICAgICAgICAgICAgICAiY29kZSI6ICJTQ1RJRDogNDAxMzE5MDA1IiwKICAgICAgICAgICAgICAgICAgICAiZGlzcGxheSI6ICJIb3NwaXRhbCBBbnhpZXR5IGFuZCBEZXByZXNzaW9uIHNjYWxlOiBhbnhpZXR5IHNjb3JlIChvYnNlcnZhYmxlIGVudGl0eSkiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDQsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5Ib3NwaXRhbCBBbnhpZXR5IGFuZCBEZXByZXNzaW9uIHNjYWxlOiBhbnhpZXR5IHNjb3JlIChvYnNlcnZhYmxlIGVudGl0eSk8L3RkPjwvdHI+PHRyPjx0ZD40PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4iCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJJUUNPREUgLyBHZXNhbXRzY29yZSIsCiAgICAgICAgICAgICJjb2RlIjogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJjb2RpbmciOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAic3lzdGVtIjogImh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiLAogICAgICAgICAgICAgICAgICAgICJjb2RlIjogIkNVU1RPTTogTlBcXElRQ09ERSIsCiAgICAgICAgICAgICAgICAgICAgImRpc3BsYXkiOiAiSVFDT0RFIC8gR2VzYW10c2NvcmUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJ2YWx1ZSI6IDQuODYsCiAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICJzdGF0dXMiOiAiZ2VuZXJhdGVkIiwKICAgICAgICAgICAgICAiZGl2IjogIjx0YWJsZT48dGJvZHk+PHRyPjx0ZD5JUUNPREUgLyBHZXNhbXRzY29yZTwvdGQ+PC90cj48dHI+PHRkPjQuODY8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPiIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfQogICAgXQogIH0sCiAgImhhc2giOiB7CiAgICAic2lnbmF0dXJlIjogImU2VDQ0UmhZUVJ4WXdlbloxMlpnWTJNSnZYaWcvbkdTMFQvdnRnQVByamFSS0Z6cTVVVWV4TXpueTZ0RlFEaTdMRU42dWhtNFRXN2N0MzlQc1JublF3PT0iLAogICAgIm1ldGhvZCI6ICJTSEEyNTYiLAogICAgInB1YmxpY0tleSI6ICItLS0tLUJFR0lOIFBVQkxJQyBLRVktLS0tLVxyXG5NRnd3RFFZSktvWklodmNOQVFFQkJRQURTd0F3U0FKQkFMU3krVHA2eHNEVVpyTkZDU2VqelFKalFaWGgxWUo5XHJcbjM1YXplZHdPOHIvNGNXU2J5V2NTS0grenlER3J1azk3ZDFDRnFJV1RQWkM4MnJhczd5M0xZUDBDQXdFQUFRPT1cclxuLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tXHJcbiIKICB9Cn0K",
                "VALTYPE_CD": "R",
                "CATEGORY_CHAR": "RAW"
              },
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>Rohdaten ohne genaue Angaben</td></tr><tr><td>Object</td></tr></tbody></table>"
              }
            }
          ]
        },
        {
          "title": "Visite: 2",
          "code": [
            {
              "coding": [
                {
                  "system": "http://snomed.info/sct",
                  "code": 308335008,
                  "display": "Visite: 2"
                }
              ]
            }
          ],
          "text": {
            "status": "generated",
            "div": "<h1>Visite: 2</h1>"
          },
          "entry": [
            {
              "title": "Lives alone",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "SCTID: 105529008",
                      "display": "Lives alone"
                    }
                  ]
                }
              ],
              "value": "k.A.",
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>Lives alone</td></tr><tr><td>k.A.</td></tr></tbody></table>"
              }
            },
            {
              "title": "Age",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "LID: 63900-5",
                      "display": "Age"
                    }
                  ]
                }
              ],
              "value": 55,
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>Age</td></tr><tr><td>55</td></tr></tbody></table>"
              }
            },
            {
              "title": "Date of birth",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "SCTID: 184099003",
                      "display": "Date of birth"
                    }
                  ]
                }
              ],
              "value": "1980-04-03",
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>Date of birth</td></tr><tr><td>1980-04-03</td></tr></tbody></table>"
              }
            },
            {
              "title": "Gender",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "SCTID: 263495000",
                      "display": "Gender"
                    }
                  ]
                }
              ],
              "value": "Female",
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>Gender</td></tr><tr><td>Female</td></tr></tbody></table>"
              }
            },
            {
              "title": "MOCA",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "LID: 72133-2",
                      "display": "MOCA"
                    }
                  ]
                }
              ],
              "value": "Yes",
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>MOCA</td></tr><tr><td>Yes</td></tr></tbody></table>"
              }
            },
            {
              "title": "MOCA Total Score",
              "code": [
                {
                  "coding": [
                    {
                      "system": "http://snomed.info/sct",
                      "code": "LID: 72172-0",
                      "display": "MOCA Total Score"
                    }
                  ]
                }
              ],
              "value": 24,
              "text": {
                "status": "generated",
                "div": "<table><tbody><tr><td>MOCA Total Score</td></tr><tr><td>24</td></tr></tbody></table>"
              }
            }
          ]
        }
      ]
    },
    "hash": {
      "signature": "nRHxuYVkJN2JzbiFJaoZNIRhEsGPqrKK96RBfgYKgn9K8WQesRIuxZJZbLFj8NRksBEPx5h7JSyXXGNZgg1nlg==",
      "method": "SHA256",
      "publicKey": "-----BEGIN PUBLIC KEY-----\r\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAL0WtWIW3ZzHaj2LAAHHKVpRfCn4B6kM\r\nscH5/lLDNtQ/zOJg+NdEqO2qNdmktkNM0QRA84T2XCF0mVi0Xmjqsf8CAwEAAQ==\r\n-----END PUBLIC KEY-----\r\n"
    }
  }
]